SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;
SET role '__TAG_MYPIVOT_DB_USERNAME__';


-- SET search_path = public, pg_catalog;
SET search_path = '__TAG_MYPIVOT_DB_SCHEMA__';

SET default_with_oids = false;

CREATE TABLE mygov_classificazione_completezza (
	mygov_classificazione_codice character varying(20) NOT NULL,
	mygov_classificazione_descrizione character varying(256)
);

ALTER TABLE mygov_ente ADD COLUMN flg_pagati boolean DEFAULT false NOT NULL;
ALTER TABLE mygov_ente ADD COLUMN flg_tesoreria boolean DEFAULT false NOT NULL;

ALTER TABLE mygov_export_rendicontazione ADD COLUMN classificazione_completezza character varying(20);
ALTER TABLE mygov_flusso_export ADD COLUMN indice_dati_singolo_pagamento integer DEFAULT 1 NOT NULL;
ALTER TABLE mygov_flusso_export ALTER COLUMN indice_dati_singolo_pagamento DROP DEFAULT;

CREATE FUNCTION update_indice_dati_singolo_pagamento() RETURNS void
    LANGUAGE plpgsql
    AS $$
  DECLARE 
        ente_id  bigint;
        iud character varying(35);
        prog bigint;
    BEGIN
    FOR ente_id, iud, prog IN
  SELECT mygov_ente_id
       , cod_iud
       , row_number()
  OVER (PARTITION BY mygov_ente_id, cod_rp_silinviarp_id_univoco_versamento 
        ORDER BY cod_iud) 
  FROM mygov_flusso_export
    LOOP
       
       EXECUTE 'update mygov_flusso_export set indice_dati_singolo_pagamento = ' || prog || ' where mygov_ente_id = ' || ente_id || ' and cod_iud = ''' || iud || '''';   
    END LOOP;
    END;
$$;

SELECT update_indice_dati_singolo_pagamento();
DROP FUNCTION update_indice_dati_singolo_pagamento();

ALTER TABLE mygov_flusso_rendicontazione ADD COLUMN indice_dati_singolo_pagamento integer DEFAULT 1 NOT NULL;
ALTER TABLE mygov_flusso_rendicontazione ALTER COLUMN indice_dati_singolo_pagamento DROP DEFAULT;
ALTER TABLE mygov_flusso_rendicontazione ADD COLUMN codice_bic_banca_di_riversamento character varying(35);

ALTER TABLE mygov_flusso_rendicontazione ADD COLUMN id SERIAL;
CREATE INDEX tmp_mygov_flusso_rendicontazione ON mygov_flusso_rendicontazione USING btree(id);

CREATE FUNCTION update_indice_dati_singolo_pagamento() RETURNS void
    LANGUAGE plpgsql
    AS $$
  DECLARE
        mygov_flusso_rendicontazione_id  bigint;
        prog bigint;
    BEGIN
    FOR mygov_flusso_rendicontazione_id, prog IN
  SELECT id
       , row_number()
  OVER (PARTITION BY mygov_ente_id, cod_dati_sing_pagam_identificativo_univoco_versamento
        ORDER BY id)
  FROM mygov_flusso_rendicontazione
  WHERE id IS NOT NULL
    LOOP

       EXECUTE 'update mygov_flusso_rendicontazione set indice_dati_singolo_pagamento = ' || prog || ' where id = ' || mygov_flusso_rendicontazione_id;
    END LOOP;
    END;
$$;

SELECT update_indice_dati_singolo_pagamento();
DROP FUNCTION update_indice_dati_singolo_pagamento();

DROP INDEX tmp_mygov_flusso_rendicontazione;
ALTER TABLE mygov_flusso_rendicontazione DROP COLUMN id;

ALTER TABLE mygov_flusso_rendicontazione DROP CONSTRAINT mygov_flusso_rendicontazione_ente_iuv_iur_pkey;
ALTER TABLE mygov_flusso_rendicontazione ADD CONSTRAINT mygov_flusso_rendicontazione_ente_iuv_iur_idsp_pkey PRIMARY KEY (mygov_ente_id, cod_dati_sing_pagam_identificativo_univoco_versamento, cod_dati_sing_pagam_identificativo_univoco_riscossione, indice_dati_singolo_pagamento);
	
ALTER TABLE mygov_export_rendicontazione_tesoreria ALTER COLUMN classificazione_completezza TYPE character varying(20) /* TYPE change - table: mygov_export_rendicontazione_tesoreria original: character varying(17) new: character varying(20) */;

CREATE TABLE mygov_flusso_import (
	version integer NOT NULL,
	dt_creazione timestamp without time zone NOT NULL,
	dt_ultima_modifica timestamp without time zone NOT NULL,
	mygov_ente_id bigint NOT NULL,
	mygov_manage_flusso_id bigint NOT NULL,
	cod_iud character varying(35) NOT NULL,
	cod_rp_silinviarp_id_univoco_versamento character varying(35) NOT NULL,
	cod_rp_sogg_pag_id_univ_pag_tipo_id_univoco character(1) NOT NULL,
	cod_rp_sogg_pag_id_univ_pag_codice_id_univoco character varying(35) NOT NULL,
	de_rp_sogg_pag_anagrafica_pagatore character varying(70) NOT NULL,
	de_rp_sogg_pag_indirizzo_pagatore character varying(70),
	de_rp_sogg_pag_civico_pagatore character varying(16),
	cod_rp_sogg_pag_cap_pagatore character varying(16),
	de_rp_sogg_pag_localita_pagatore character varying(35),
	de_rp_sogg_pag_provincia_pagatore character varying(2),
	cod_rp_sogg_pag_nazione_pagatore character varying(2),
	de_rp_sogg_pag_email_pagatore character varying(256),
	dt_rp_dati_vers_data_esecuzione_pagamento date NOT NULL,
	cod_rp_dati_vers_tipo_versamento character varying(32) NOT NULL,
	num_rp_dati_vers_dati_sing_vers_importo_singolo_versamento numeric(12,2) NOT NULL,
	num_rp_dati_vers_dati_sing_vers_commissione_carico_pa numeric(12,2),
	de_rp_dati_vers_dati_sing_vers_causale_versamento character varying(140) NOT NULL,
	de_rp_dati_vers_dati_sing_vers_dati_specifici_riscossione character varying(140) NOT NULL,
	cod_tipo_dovuto character varying(64) NOT NULL,
	bilancio character varying(4096)
);

CREATE TABLE mygov_import_export_rendicontazione_tesoreria (
	codice_ipa_ente character varying(80),
	dt_data_esecuzione_pagamento date,
	de_data_esecuzione_pagamento character varying(10),
	singolo_importo_commissione_carico_pa character varying(15),
	bilancio character varying(4096),
	nome_flusso_import_ente character varying(50),
	riga_flusso_import_ente character varying(12),
	codice_iud character varying(35),
	codice_iuv character varying(35),
	versione_oggetto character varying(16),
	identificativo_dominio character varying(35),
	identificativo_stazione_richiedente character varying(35),
	identificativo_messaggio_ricevuta character varying(35),
	data_ora_messaggio_ricevuta character varying(19),
	riferimento_messaggio_richiesta character varying(35),
	riferimento_data_richiesta character varying(10),
	tipo_identificativo_univoco_attestante character varying(1),
	codice_identificativo_univoco_attestante character varying(35),
	denominazione_attestante character varying(70),
	codice_unit_oper_attestante character varying(35),
	denom_unit_oper_attestante character varying(70),
	indirizzo_attestante character varying(70),
	civico_attestante character varying(16),
	cap_attestante character varying(16),
	localita_attestante character varying(35),
	provincia_attestante character varying(35),
	nazione_attestante character varying(2),
	tipo_identificativo_univoco_beneficiario character varying(1),
	codice_identificativo_univoco_beneficiario character varying(35),
	denominazione_beneficiario character varying(70),
	codice_unit_oper_beneficiario character varying(35),
	denom_unit_oper_beneficiario character varying(70),
	indirizzo_beneficiario character varying(70),
	civico_beneficiario character varying(16),
	cap_beneficiario character varying(16),
	localita_beneficiario character varying(35),
	provincia_beneficiario character varying(2),
	nazione_beneficiario character varying(2),
	tipo_identificativo_univoco_versante character varying(1),
	codice_identificativo_univoco_versante character varying(35),
	anagrafica_versante character varying(70),
	indirizzo_versante character varying(70),
	civico_versante character varying(16),
	cap_versante character varying(16),
	localita_versante character varying(35),
	provincia_versante character varying(35),
	nazione_versante character varying(2),
	email_versante character varying(256),
	tipo_identificativo_univoco_pagatore character varying(1),
	codice_identificativo_univoco_pagatore character varying(35),
	anagrafica_pagatore character varying(70),
	indirizzo_pagatore character varying(70),
	civico_pagatore character varying(16),
	cap_pagatore character varying(16),
	localita_pagatore character varying(35),
	provincia_pagatore character varying(35),
	nazione_pagatore character varying(2),
	email_pagatore character varying(256),
	codice_esito_pagamento character varying(1),
	importo_totale_pagato character varying(15),
	identificativo_univoco_versamento character varying(35),
	codice_contesto_pagamento character varying(35),
	singolo_importo_pagato character varying(15),
	esito_singolo_pagamento character varying(35),
	dt_data_esito_singolo_pagamento date,
	de_data_esito_singolo_pagamento character varying(10),
	identificativo_univoco_riscossione character varying(35),
	causale_versamento character varying(140),
	dati_specifici_riscossione character varying(140),
	tipo_dovuto character varying(64),
	identificativo_flusso_rendicontazione character varying(35),
	data_ora_flusso_rendicontazione character varying(19),
	identificativo_univoco_regolamento character varying(35),
	dt_data_regolamento date,
	de_data_regolamento character varying,
	numero_totale_pagamenti character varying(15),
	importo_totale_pagamenti character varying(21),
	data_acquisizione character varying(10),
	cod_conto character varying(12),
	dt_data_contabile date,
	de_data_contabile character varying(10),
	dt_data_valuta date,
	de_data_valuta character varying(10),
	num_importo numeric(12,2),
	de_importo character varying(15),
	cod_or1 text,
	verifica_totale character varying(3),
	classificazione_completezza character varying(20)
);

DROP VIEW v_mygov_export_rendicontazione;

DROP VIEW v_mygov_export_rendicontazione_tesoreria;

DROP VIEW mygov_export_rendicontazione_completa;

DROP VIEW mygov_export_rendicontazione_tesoreria_completa;

CREATE VIEW mygov_export_rendicontazione_completa AS
SELECT export.mygov_ente_id AS mygov_ente_id_e, export.mygov_manage_flusso_id AS mygov_manage_flusso_id_e, export.de_nome_flusso AS de_nome_flusso_e, export.num_riga_flusso AS num_riga_flusso_e, export.cod_iud AS cod_iud_e, export.cod_rp_silinviarp_id_univoco_versamento AS cod_rp_silinviarp_id_univoco_versamento_e, export.de_e_versione_oggetto AS de_e_versione_oggetto_e, export.cod_e_dom_id_dominio AS cod_e_dom_id_dominio_e, export.cod_e_dom_id_stazione_richiedente AS cod_e_dom_id_stazione_richiedente_e, export.cod_e_id_messaggio_ricevuta AS cod_e_id_messaggio_ricevuta_e, export.dt_e_data_ora_messaggio_ricevuta AS dt_e_data_ora_messaggio_ricevuta_e, export.cod_e_riferimento_messaggio_richiesta AS cod_e_riferimento_messaggio_richiesta_e, export.dt_e_riferimento_data_richiesta AS dt_e_riferimento_data_richiesta_e, export.cod_e_istit_att_id_univ_att_tipo_id_univoco AS cod_e_istit_att_id_univ_att_tipo_id_univoco_e, export.cod_e_istit_att_id_univ_att_codice_id_univoco AS cod_e_istit_att_id_univ_att_codice_id_univoco_e, export.de_e_istit_att_denominazione_attestante AS de_e_istit_att_denominazione_attestante_e, export.cod_e_istit_att_codice_unit_oper_attestante AS cod_e_istit_att_codice_unit_oper_attestante_e, export.de_e_istit_att_denom_unit_oper_attestante AS de_e_istit_att_denom_unit_oper_attestante_e, export.de_e_istit_att_indirizzo_attestante AS de_e_istit_att_indirizzo_attestante_e, export.de_e_istit_att_civico_attestante AS de_e_istit_att_civico_attestante_e, export.cod_e_istit_att_cap_attestante AS cod_e_istit_att_cap_attestante_e, export.de_e_istit_att_localita_attestante AS de_e_istit_att_localita_attestante_e, export.de_e_istit_att_provincia_attestante AS de_e_istit_att_provincia_attestante_e, export.cod_e_istit_att_nazione_attestante AS cod_e_istit_att_nazione_attestante_e, export.cod_e_ente_benef_id_univ_benef_tipo_id_univoco AS cod_e_ente_benef_id_univ_benef_tipo_id_univoco_e, export.cod_e_ente_benef_id_univ_benef_codice_id_univoco AS cod_e_ente_benef_id_univ_benef_codice_id_univoco_e, export.de_e_ente_benef_denominazione_beneficiario AS de_e_ente_benef_denominazione_beneficiario_e, export.cod_e_ente_benef_codice_unit_oper_beneficiario AS cod_e_ente_benef_codice_unit_oper_beneficiario_e, export.de_e_ente_benef_denom_unit_oper_beneficiario AS de_e_ente_benef_denom_unit_oper_beneficiario_e, export.de_e_ente_benef_indirizzo_beneficiario AS de_e_ente_benef_indirizzo_beneficiario_e, export.de_e_ente_benef_civico_beneficiario AS de_e_ente_benef_civico_beneficiario_e, export.cod_e_ente_benef_cap_beneficiario AS cod_e_ente_benef_cap_beneficiario_e, export.de_e_ente_benef_localita_beneficiario AS de_e_ente_benef_localita_beneficiario_e, export.de_e_ente_benef_provincia_beneficiario AS de_e_ente_benef_provincia_beneficiario_e, export.cod_e_ente_benef_nazione_beneficiario AS cod_e_ente_benef_nazione_beneficiario_e, export.cod_e_sogg_vers_id_univ_vers_tipo_id_univoco AS cod_e_sogg_vers_id_univ_vers_tipo_id_univoco_e, export.cod_e_sogg_vers_id_univ_vers_codice_id_univoco AS cod_e_sogg_vers_id_univ_vers_codice_id_univoco_e, export.cod_e_sogg_vers_anagrafica_versante AS cod_e_sogg_vers_anagrafica_versante_e, export.de_e_sogg_vers_indirizzo_versante AS de_e_sogg_vers_indirizzo_versante_e, export.de_e_sogg_vers_civico_versante AS de_e_sogg_vers_civico_versante_e, export.cod_e_sogg_vers_cap_versante AS cod_e_sogg_vers_cap_versante_e, export.de_e_sogg_vers_localita_versante AS de_e_sogg_vers_localita_versante_e, export.de_e_sogg_vers_provincia_versante AS de_e_sogg_vers_provincia_versante_e, export.cod_e_sogg_vers_nazione_versante AS cod_e_sogg_vers_nazione_versante_e, export.de_e_sogg_vers_email_versante AS de_e_sogg_vers_email_versante_e, export.cod_e_sogg_pag_id_univ_pag_tipo_id_univoco AS cod_e_sogg_pag_id_univ_pag_tipo_id_univoco_e, export.cod_e_sogg_pag_id_univ_pag_codice_id_univoco AS cod_e_sogg_pag_id_univ_pag_codice_id_univoco_e, export.cod_e_sogg_pag_anagrafica_pagatore AS cod_e_sogg_pag_anagrafica_pagatore_e, export.de_e_sogg_pag_indirizzo_pagatore AS de_e_sogg_pag_indirizzo_pagatore_e, export.de_e_sogg_pag_civico_pagatore AS de_e_sogg_pag_civico_pagatore_e, export.cod_e_sogg_pag_cap_pagatore AS cod_e_sogg_pag_cap_pagatore_e, export.de_e_sogg_pag_localita_pagatore AS de_e_sogg_pag_localita_pagatore_e, export.de_e_sogg_pag_provincia_pagatore AS de_e_sogg_pag_provincia_pagatore_e, export.cod_e_sogg_pag_nazione_pagatore AS cod_e_sogg_pag_nazione_pagatore_e, export.de_e_sogg_pag_email_pagatore AS de_e_sogg_pag_email_pagatore_e, export.cod_e_dati_pag_codice_esito_pagamento AS cod_e_dati_pag_codice_esito_pagamento_e, export.num_e_dati_pag_importo_totale_pagato AS num_e_dati_pag_importo_totale_pagato_e, export.cod_e_dati_pag_id_univoco_versamento AS cod_e_dati_pag_id_univoco_versamento_e, export.cod_e_dati_pag_codice_contesto_pagamento AS cod_e_dati_pag_codice_contesto_pagamento_e, export.num_e_dati_pag_dati_sing_pag_singolo_importo_pagato AS num_e_dati_pag_dati_sing_pag_singolo_importo_pagato_e, export.de_e_dati_pag_dati_sing_pag_esito_singolo_pagamento AS de_e_dati_pag_dati_sing_pag_esito_singolo_pagamento_e, export.dt_e_dati_pag_dati_sing_pag_data_esito_singolo_pagamento AS dt_e_dati_pag_dati_sing_pag_data_esito_singolo_pagamento_e, export.cod_e_dati_pag_dati_sing_pag_id_univoco_riscoss AS cod_e_dati_pag_dati_sing_pag_id_univoco_riscoss_e, export.de_e_dati_pag_dati_sing_pag_causale_versamento AS de_e_dati_pag_dati_sing_pag_causale_versamento_e, export.de_e_dati_pag_dati_sing_pag_dati_specifici_riscossione AS de_e_dati_pag_dati_sing_pag_dati_specifici_riscossione_e, export.cod_tipo_dovuto AS cod_tipo_dovuto_e, export.dt_acquisizione AS dt_acquisizione_e, rendicontazione.mygov_ente_id AS mygov_ente_id_r, rendicontazione.mygov_manage_flusso_id AS mygov_manage_flusso_id_r, rendicontazione.versione_oggetto AS versione_oggetto_r, rendicontazione.cod_identificativo_flusso AS cod_identificativo_flusso_r, rendicontazione.dt_data_ora_flusso AS dt_data_ora_flusso_r, rendicontazione.cod_identificativo_univoco_regolamento AS cod_identificativo_univoco_regolamento_r, rendicontazione.dt_data_regolamento AS dt_data_regolamento_r, rendicontazione.cod_ist_mitt_id_univ_mitt_tipo_identificativo_univoco AS cod_ist_mitt_id_univ_mitt_tipo_identificativo_univoco_r, rendicontazione.cod_ist_mitt_id_univ_mitt_codice_identificativo_univoco AS cod_ist_mitt_id_univ_mitt_codice_identificativo_univoco_r, rendicontazione.de_ist_mitt_denominazione_mittente AS de_ist_mitt_denominazione_mittente_r, rendicontazione.cod_ist_ricev_id_univ_ricev_tipo_identificativo_univoco AS cod_ist_ricev_id_univ_ricev_tipo_identificativo_univoco_r, rendicontazione.cod_ist_ricev_id_univ_ricev_codice_identificativo_univoco AS cod_ist_ricev_id_univ_ricev_codice_identificativo_univoco_r, rendicontazione.de_ist_ricev_denominazione_ricevente AS de_ist_ricev_denominazione_ricevente_r, rendicontazione.num_numero_totale_pagamenti AS num_numero_totale_pagamenti_r, rendicontazione.num_importo_totale_pagamenti AS num_importo_totale_pagamenti_r, rendicontazione.cod_dati_sing_pagam_identificativo_univoco_versamento AS cod_dati_sing_pagam_identificativo_univoco_versamento_r, rendicontazione.cod_dati_sing_pagam_identificativo_univoco_riscossione AS cod_dati_sing_pagam_identificativo_univoco_riscossione_r, rendicontazione.num_dati_sing_pagam_singolo_importo_pagato AS num_dati_sing_pagam_singolo_importo_pagato_r, rendicontazione.cod_dati_sing_pagam_codice_esito_singolo_pagamento AS cod_dati_sing_pagam_codice_esito_singolo_pagamento_r, rendicontazione.dt_dati_sing_pagam_data_esito_singolo_pagamento AS dt_dati_sing_pagam_data_esito_singolo_pagamento_r, rendicontazione.dt_acquisizione AS dt_acquisizione_r, classificazione.mygov_classificazione_codice AS classificazione_completezza FROM ((mygov_flusso_export export FULL JOIN mygov_flusso_rendicontazione rendicontazione ON (((((export.mygov_ente_id = rendicontazione.mygov_ente_id) AND ((export.cod_rp_silinviarp_id_univoco_versamento)::text = (rendicontazione.cod_dati_sing_pagam_identificativo_univoco_versamento)::text)) AND ((export.cod_e_dati_pag_dati_sing_pag_id_univoco_riscoss)::text = (rendicontazione.cod_dati_sing_pagam_identificativo_univoco_riscossione)::text)) AND (export.indice_dati_singolo_pagamento = rendicontazione.indice_dati_singolo_pagamento)))) LEFT JOIN mygov_classificazione_completezza classificazione ON (((((((classificazione.mygov_classificazione_codice)::text = 'RT_IUF'::text) AND (export.num_e_dati_pag_importo_totale_pagato IS NOT NULL)) AND (rendicontazione.num_dati_sing_pagam_singolo_importo_pagato IS NOT NULL)) AND (export.num_e_dati_pag_importo_totale_pagato = rendicontazione.num_dati_sing_pagam_singolo_importo_pagato)) OR ((((classificazione.mygov_classificazione_codice)::text = 'RT_NO_IUF'::text) AND (export.num_e_dati_pag_importo_totale_pagato IS NOT NULL)) AND ((rendicontazione.num_dati_sing_pagam_singolo_importo_pagato IS NULL) OR ((rendicontazione.num_dati_sing_pagam_singolo_importo_pagato IS NOT NULL) AND (export.num_e_dati_pag_importo_totale_pagato <> rendicontazione.num_dati_sing_pagam_singolo_importo_pagato)))))));

CREATE VIEW mygov_export_rendicontazione_tesoreria_completa AS
SELECT export.mygov_ente_id AS mygov_ente_id_e, export.mygov_manage_flusso_id AS mygov_manage_flusso_id_e, export.de_nome_flusso AS de_nome_flusso_e, export.num_riga_flusso AS num_riga_flusso_e, export.cod_iud AS cod_iud_e, export.cod_rp_silinviarp_id_univoco_versamento AS cod_rp_silinviarp_id_univoco_versamento_e, export.de_e_versione_oggetto AS de_e_versione_oggetto_e, export.cod_e_dom_id_dominio AS cod_e_dom_id_dominio_e, export.cod_e_dom_id_stazione_richiedente AS cod_e_dom_id_stazione_richiedente_e, export.cod_e_id_messaggio_ricevuta AS cod_e_id_messaggio_ricevuta_e, export.dt_e_data_ora_messaggio_ricevuta AS dt_e_data_ora_messaggio_ricevuta_e, export.cod_e_riferimento_messaggio_richiesta AS cod_e_riferimento_messaggio_richiesta_e, export.dt_e_riferimento_data_richiesta AS dt_e_riferimento_data_richiesta_e, export.cod_e_istit_att_id_univ_att_tipo_id_univoco AS cod_e_istit_att_id_univ_att_tipo_id_univoco_e, export.cod_e_istit_att_id_univ_att_codice_id_univoco AS cod_e_istit_att_id_univ_att_codice_id_univoco_e, export.de_e_istit_att_denominazione_attestante AS de_e_istit_att_denominazione_attestante_e, export.cod_e_istit_att_codice_unit_oper_attestante AS cod_e_istit_att_codice_unit_oper_attestante_e, export.de_e_istit_att_denom_unit_oper_attestante AS de_e_istit_att_denom_unit_oper_attestante_e, export.de_e_istit_att_indirizzo_attestante AS de_e_istit_att_indirizzo_attestante_e, export.de_e_istit_att_civico_attestante AS de_e_istit_att_civico_attestante_e, export.cod_e_istit_att_cap_attestante AS cod_e_istit_att_cap_attestante_e, export.de_e_istit_att_localita_attestante AS de_e_istit_att_localita_attestante_e, export.de_e_istit_att_provincia_attestante AS de_e_istit_att_provincia_attestante_e, export.cod_e_istit_att_nazione_attestante AS cod_e_istit_att_nazione_attestante_e, export.cod_e_ente_benef_id_univ_benef_tipo_id_univoco AS cod_e_ente_benef_id_univ_benef_tipo_id_univoco_e, export.cod_e_ente_benef_id_univ_benef_codice_id_univoco AS cod_e_ente_benef_id_univ_benef_codice_id_univoco_e, export.de_e_ente_benef_denominazione_beneficiario AS de_e_ente_benef_denominazione_beneficiario_e, export.cod_e_ente_benef_codice_unit_oper_beneficiario AS cod_e_ente_benef_codice_unit_oper_beneficiario_e, export.de_e_ente_benef_denom_unit_oper_beneficiario AS de_e_ente_benef_denom_unit_oper_beneficiario_e, export.de_e_ente_benef_indirizzo_beneficiario AS de_e_ente_benef_indirizzo_beneficiario_e, export.de_e_ente_benef_civico_beneficiario AS de_e_ente_benef_civico_beneficiario_e, export.cod_e_ente_benef_cap_beneficiario AS cod_e_ente_benef_cap_beneficiario_e, export.de_e_ente_benef_localita_beneficiario AS de_e_ente_benef_localita_beneficiario_e, export.de_e_ente_benef_provincia_beneficiario AS de_e_ente_benef_provincia_beneficiario_e, export.cod_e_ente_benef_nazione_beneficiario AS cod_e_ente_benef_nazione_beneficiario_e, export.cod_e_sogg_vers_id_univ_vers_tipo_id_univoco AS cod_e_sogg_vers_id_univ_vers_tipo_id_univoco_e, export.cod_e_sogg_vers_id_univ_vers_codice_id_univoco AS cod_e_sogg_vers_id_univ_vers_codice_id_univoco_e, export.cod_e_sogg_vers_anagrafica_versante AS cod_e_sogg_vers_anagrafica_versante_e, export.de_e_sogg_vers_indirizzo_versante AS de_e_sogg_vers_indirizzo_versante_e, export.de_e_sogg_vers_civico_versante AS de_e_sogg_vers_civico_versante_e, export.cod_e_sogg_vers_cap_versante AS cod_e_sogg_vers_cap_versante_e, export.de_e_sogg_vers_localita_versante AS de_e_sogg_vers_localita_versante_e, export.de_e_sogg_vers_provincia_versante AS de_e_sogg_vers_provincia_versante_e, export.cod_e_sogg_vers_nazione_versante AS cod_e_sogg_vers_nazione_versante_e, export.de_e_sogg_vers_email_versante AS de_e_sogg_vers_email_versante_e, export.cod_e_sogg_pag_id_univ_pag_tipo_id_univoco AS cod_e_sogg_pag_id_univ_pag_tipo_id_univoco_e, export.cod_e_sogg_pag_id_univ_pag_codice_id_univoco AS cod_e_sogg_pag_id_univ_pag_codice_id_univoco_e, export.cod_e_sogg_pag_anagrafica_pagatore AS cod_e_sogg_pag_anagrafica_pagatore_e, export.de_e_sogg_pag_indirizzo_pagatore AS de_e_sogg_pag_indirizzo_pagatore_e, export.de_e_sogg_pag_civico_pagatore AS de_e_sogg_pag_civico_pagatore_e, export.cod_e_sogg_pag_cap_pagatore AS cod_e_sogg_pag_cap_pagatore_e, export.de_e_sogg_pag_localita_pagatore AS de_e_sogg_pag_localita_pagatore_e, export.de_e_sogg_pag_provincia_pagatore AS de_e_sogg_pag_provincia_pagatore_e, export.cod_e_sogg_pag_nazione_pagatore AS cod_e_sogg_pag_nazione_pagatore_e, export.de_e_sogg_pag_email_pagatore AS de_e_sogg_pag_email_pagatore_e, export.cod_e_dati_pag_codice_esito_pagamento AS cod_e_dati_pag_codice_esito_pagamento_e, export.num_e_dati_pag_importo_totale_pagato AS num_e_dati_pag_importo_totale_pagato_e, export.cod_e_dati_pag_id_univoco_versamento AS cod_e_dati_pag_id_univoco_versamento_e, export.cod_e_dati_pag_codice_contesto_pagamento AS cod_e_dati_pag_codice_contesto_pagamento_e, export.num_e_dati_pag_dati_sing_pag_singolo_importo_pagato AS num_e_dati_pag_dati_sing_pag_singolo_importo_pagato_e, export.de_e_dati_pag_dati_sing_pag_esito_singolo_pagamento AS de_e_dati_pag_dati_sing_pag_esito_singolo_pagamento_e, export.dt_e_dati_pag_dati_sing_pag_data_esito_singolo_pagamento AS dt_e_dati_pag_dati_sing_pag_data_esito_singolo_pagamento_e, export.cod_e_dati_pag_dati_sing_pag_id_univoco_riscoss AS cod_e_dati_pag_dati_sing_pag_id_univoco_riscoss_e, export.de_e_dati_pag_dati_sing_pag_causale_versamento AS de_e_dati_pag_dati_sing_pag_causale_versamento_e, export.de_e_dati_pag_dati_sing_pag_dati_specifici_riscossione AS de_e_dati_pag_dati_sing_pag_dati_specifici_riscossione_e, export.cod_tipo_dovuto AS cod_tipo_dovuto_e, export.dt_acquisizione AS dt_acquisizione_e, rendicontazione.mygov_ente_id AS mygov_ente_id_r, rendicontazione.mygov_manage_flusso_id AS mygov_manage_flusso_id_r, rendicontazione.versione_oggetto AS versione_oggetto_r, rendicontazione.cod_identificativo_flusso AS cod_identificativo_flusso_r, rendicontazione.dt_data_ora_flusso AS dt_data_ora_flusso_r, rendicontazione.cod_identificativo_univoco_regolamento AS cod_identificativo_univoco_regolamento_r, rendicontazione.dt_data_regolamento AS dt_data_regolamento_r, rendicontazione.cod_ist_mitt_id_univ_mitt_tipo_identificativo_univoco AS cod_ist_mitt_id_univ_mitt_tipo_identificativo_univoco_r, rendicontazione.cod_ist_mitt_id_univ_mitt_codice_identificativo_univoco AS cod_ist_mitt_id_univ_mitt_codice_identificativo_univoco_r, rendicontazione.de_ist_mitt_denominazione_mittente AS de_ist_mitt_denominazione_mittente_r, rendicontazione.cod_ist_ricev_id_univ_ricev_tipo_identificativo_univoco AS cod_ist_ricev_id_univ_ricev_tipo_identificativo_univoco_r, rendicontazione.cod_ist_ricev_id_univ_ricev_codice_identificativo_univoco AS cod_ist_ricev_id_univ_ricev_codice_identificativo_univoco_r, rendicontazione.de_ist_ricev_denominazione_ricevente AS de_ist_ricev_denominazione_ricevente_r, rendicontazione.num_numero_totale_pagamenti AS num_numero_totale_pagamenti_r, rendicontazione.num_importo_totale_pagamenti AS num_importo_totale_pagamenti_r, rendicontazione.cod_dati_sing_pagam_identificativo_univoco_versamento AS cod_dati_sing_pagam_identificativo_univoco_versamento_r, rendicontazione.cod_dati_sing_pagam_identificativo_univoco_riscossione AS cod_dati_sing_pagam_identificativo_univoco_riscossione_r, rendicontazione.num_dati_sing_pagam_singolo_importo_pagato AS num_dati_sing_pagam_singolo_importo_pagato_r, rendicontazione.cod_dati_sing_pagam_codice_esito_singolo_pagamento AS cod_dati_sing_pagam_codice_esito_singolo_pagamento_r, rendicontazione.dt_dati_sing_pagam_data_esito_singolo_pagamento AS dt_dati_sing_pagam_data_esito_singolo_pagamento_r, rendicontazione.dt_acquisizione AS dt_acquisizione_r, COALESCE(tesoreria_iuf.mygov_ente_id, tesoreria_iuv.mygov_ente_id) AS mygov_ente_id_t, COALESCE(tesoreria_iuf.mygov_manage_flusso_id, tesoreria_iuv.mygov_manage_flusso_id) AS mygov_manage_flusso_id_t, COALESCE(tesoreria_iuf.cod_abi, tesoreria_iuv.cod_abi) AS cod_abi_t, COALESCE(tesoreria_iuf.cod_cab, tesoreria_iuv.cod_cab) AS cod_cab_t, COALESCE(tesoreria_iuf.cod_conto, tesoreria_iuv.cod_conto) AS cod_conto_t, COALESCE(tesoreria_iuf.cod_divisa, tesoreria_iuv.cod_divisa) AS cod_divisa_t, COALESCE(tesoreria_iuf.dt_data_contabile, tesoreria_iuv.dt_data_contabile) AS dt_data_contabile_t, COALESCE(tesoreria_iuf.dt_data_valuta, tesoreria_iuv.dt_data_valuta) AS dt_data_valuta_t, COALESCE(tesoreria_iuf.num_importo, tesoreria_iuv.num_importo) AS num_importo_t, COALESCE(tesoreria_iuf.cod_segno, tesoreria_iuv.cod_segno) AS cod_segno_t, COALESCE(tesoreria_iuf.de_causale, tesoreria_iuv.de_causale) AS de_causale_t, COALESCE(tesoreria_iuf.cod_numero_assegno, tesoreria_iuv.cod_numero_assegno) AS cod_numero_assegno_t, COALESCE(tesoreria_iuf.cod_riferimento_banca, tesoreria_iuv.cod_riferimento_banca) AS cod_riferimento_banca_t, COALESCE(tesoreria_iuf.cod_riferimento_cliente, tesoreria_iuv.cod_riferimento_cliente) AS cod_riferimento_cliente_t, COALESCE(tesoreria_iuf.dt_data_ordine, tesoreria_iuv.dt_data_ordine) AS dt_data_ordine_t, COALESCE(tesoreria_iuf.de_descrizione_ordinante, tesoreria_iuv.de_descrizione_ordinante) AS de_descrizione_ordinante_t, COALESCE(tesoreria_iuf.cod_bi2, tesoreria_iuv.cod_bi2) AS cod_bi2_t, COALESCE(tesoreria_iuf.cod_be1, tesoreria_iuv.cod_be1) AS cod_be1_t, COALESCE(tesoreria_iuf.cod_ib1, tesoreria_iuv.cod_ib1) AS cod_ib1_t, COALESCE(tesoreria_iuf.cod_ib2, tesoreria_iuv.cod_ib2) AS cod_ib2_t, COALESCE(tesoreria_iuf.cod_ib4, tesoreria_iuv.cod_ib4) AS cod_ib4_t, COALESCE(tesoreria_iuf.cod_tid, tesoreria_iuv.cod_tid) AS cod_tid_t, COALESCE(tesoreria_iuf.cod_dte, tesoreria_iuv.cod_dte) AS cod_dte_t, COALESCE(tesoreria_iuf.cod_dtn, tesoreria_iuv.cod_dtn) AS cod_dtn_t, COALESCE(tesoreria_iuf.cod_eri, tesoreria_iuv.cod_eri) AS cod_eri_t, COALESCE(tesoreria_iuf.cod_im2, tesoreria_iuv.cod_im2) AS cod_im2_t, COALESCE(tesoreria_iuf.cod_ma2, tesoreria_iuv.cod_ma2) AS cod_ma2_t, COALESCE(tesoreria_iuf.cod_ri3, tesoreria_iuv.cod_ri3) AS cod_ri3_t, COALESCE(tesoreria_iuf.cod_or1, tesoreria_iuv.cod_or1) AS cod_or1_t, COALESCE(tesoreria_iuf.cod_sc2, tesoreria_iuv.cod_sc2) AS cod_sc2_t, COALESCE(tesoreria_iuf.cod_tr1, tesoreria_iuv.cod_tr1) AS cod_tr1_t, COALESCE(tesoreria_iuf.cod_sec, tesoreria_iuv.cod_sec) AS cod_sec_t, COALESCE(tesoreria_iuf.cod_ior, tesoreria_iuv.cod_ior) AS cod_ior_t, tesoreria_iuf.cod_id_univoco_flusso AS cod_id_univoco_flusso_t, tesoreria_iuv.cod_id_univoco_versamento AS cod_id_univoco_versamento_t, COALESCE(tesoreria_iuf.dt_acquisizione, tesoreria_iuf.dt_acquisizione) AS dt_acquisizione_t, classificazione.mygov_classificazione_codice AS classificazione_completezza FROM ((((mygov_flusso_export export FULL JOIN mygov_flusso_rendicontazione rendicontazione ON (((((export.mygov_ente_id = rendicontazione.mygov_ente_id) AND ((export.cod_rp_silinviarp_id_univoco_versamento)::text = (rendicontazione.cod_dati_sing_pagam_identificativo_univoco_versamento)::text)) AND ((export.cod_e_dati_pag_dati_sing_pag_id_univoco_riscoss)::text = (rendicontazione.cod_dati_sing_pagam_identificativo_univoco_riscossione)::text)) AND (export.indice_dati_singolo_pagamento = rendicontazione.indice_dati_singolo_pagamento)))) FULL JOIN (SELECT mygov_flusso_tesoreria_iuf.mygov_ente_id, mygov_flusso_tesoreria_iuf.mygov_manage_flusso_id, mygov_flusso_tesoreria_iuf.cod_abi, mygov_flusso_tesoreria_iuf.cod_cab, mygov_flusso_tesoreria_iuf.cod_conto, mygov_flusso_tesoreria_iuf.cod_divisa, mygov_flusso_tesoreria_iuf.dt_data_contabile, mygov_flusso_tesoreria_iuf.dt_data_valuta, mygov_flusso_tesoreria_iuf.num_importo, mygov_flusso_tesoreria_iuf.cod_segno, mygov_flusso_tesoreria_iuf.de_causale, mygov_flusso_tesoreria_iuf.cod_numero_assegno, mygov_flusso_tesoreria_iuf.cod_riferimento_banca, mygov_flusso_tesoreria_iuf.cod_riferimento_cliente, mygov_flusso_tesoreria_iuf.dt_data_ordine, mygov_flusso_tesoreria_iuf.de_descrizione_ordinante, mygov_flusso_tesoreria_iuf.cod_bi2, mygov_flusso_tesoreria_iuf.cod_be1, mygov_flusso_tesoreria_iuf.cod_ib1, mygov_flusso_tesoreria_iuf.cod_ib2, mygov_flusso_tesoreria_iuf.cod_ib4, mygov_flusso_tesoreria_iuf.cod_tid, mygov_flusso_tesoreria_iuf.cod_dte, mygov_flusso_tesoreria_iuf.cod_dtn, mygov_flusso_tesoreria_iuf.cod_eri, mygov_flusso_tesoreria_iuf.cod_im2, mygov_flusso_tesoreria_iuf.cod_ma2, mygov_flusso_tesoreria_iuf.cod_ri3, mygov_flusso_tesoreria_iuf.cod_or1, mygov_flusso_tesoreria_iuf.cod_sc2, mygov_flusso_tesoreria_iuf.cod_tr1, mygov_flusso_tesoreria_iuf.cod_sec, mygov_flusso_tesoreria_iuf.cod_ior, mygov_flusso_tesoreria_iuf.cod_id_univoco_flusso, NULL::character varying AS cod_id_univoco_versamento, mygov_flusso_tesoreria_iuf.dt_acquisizione FROM mygov_flusso_tesoreria_iuf) tesoreria_iuf ON (((tesoreria_iuf.cod_id_univoco_flusso)::text = (rendicontazione.cod_identificativo_flusso)::text))) FULL JOIN (SELECT mygov_flusso_tesoreria_iuv.mygov_ente_id, mygov_flusso_tesoreria_iuv.mygov_manage_flusso_id, mygov_flusso_tesoreria_iuv.cod_abi, mygov_flusso_tesoreria_iuv.cod_cab, mygov_flusso_tesoreria_iuv.cod_conto, mygov_flusso_tesoreria_iuv.cod_divisa, mygov_flusso_tesoreria_iuv.dt_data_contabile, mygov_flusso_tesoreria_iuv.dt_data_valuta, mygov_flusso_tesoreria_iuv.num_importo, mygov_flusso_tesoreria_iuv.cod_segno, mygov_flusso_tesoreria_iuv.de_causale, mygov_flusso_tesoreria_iuv.cod_numero_assegno, mygov_flusso_tesoreria_iuv.cod_riferimento_banca, mygov_flusso_tesoreria_iuv.cod_riferimento_cliente, mygov_flusso_tesoreria_iuv.dt_data_ordine, mygov_flusso_tesoreria_iuv.de_descrizione_ordinante, mygov_flusso_tesoreria_iuv.cod_bi2, mygov_flusso_tesoreria_iuv.cod_be1, mygov_flusso_tesoreria_iuv.cod_ib1, mygov_flusso_tesoreria_iuv.cod_ib2, mygov_flusso_tesoreria_iuv.cod_ib4, mygov_flusso_tesoreria_iuv.cod_tid, mygov_flusso_tesoreria_iuv.cod_dte, mygov_flusso_tesoreria_iuv.cod_dtn, mygov_flusso_tesoreria_iuv.cod_eri, mygov_flusso_tesoreria_iuv.cod_im2, mygov_flusso_tesoreria_iuv.cod_ma2, mygov_flusso_tesoreria_iuv.cod_ri3, mygov_flusso_tesoreria_iuv.cod_or1, mygov_flusso_tesoreria_iuv.cod_sc2, mygov_flusso_tesoreria_iuv.cod_tr1, mygov_flusso_tesoreria_iuv.cod_sec, mygov_flusso_tesoreria_iuv.cod_ior, NULL::character varying AS cod_id_univoco_flusso, mygov_flusso_tesoreria_iuv.cod_id_univoco_versamento, mygov_flusso_tesoreria_iuv.dt_acquisizione FROM mygov_flusso_tesoreria_iuv) tesoreria_iuv ON (((COALESCE(export.mygov_ente_id, rendicontazione.mygov_ente_id) = tesoreria_iuv.mygov_ente_id) AND ((COALESCE(export.cod_rp_silinviarp_id_univoco_versamento, rendicontazione.cod_dati_sing_pagam_identificativo_univoco_versamento))::text = (tesoreria_iuv.cod_id_univoco_versamento)::text)))) LEFT JOIN mygov_classificazione_completezza classificazione ON ((((((((((classificazione.mygov_classificazione_codice)::text = 'RT_IUF_TES'::text) AND (export.num_e_dati_pag_importo_totale_pagato IS NOT NULL)) AND ((((((rendicontazione.num_dati_sing_pagam_singolo_importo_pagato IS NOT NULL) AND (export.num_e_dati_pag_importo_totale_pagato = rendicontazione.num_dati_sing_pagam_singolo_importo_pagato)) AND (rendicontazione.num_importo_totale_pagamenti IS NOT NULL)) AND (tesoreria_iuf.num_importo IS NOT NULL)) AND (rendicontazione.num_importo_totale_pagamenti = tesoreria_iuf.num_importo)) OR ((tesoreria_iuv.num_importo IS NOT NULL) AND (export.num_e_dati_pag_importo_totale_pagato = tesoreria_iuv.num_importo)))) OR (((((classificazione.mygov_classificazione_codice)::text = 'RT_IUF'::text) AND (export.num_e_dati_pag_importo_totale_pagato IS NOT NULL)) AND (rendicontazione.num_dati_sing_pagam_singolo_importo_pagato IS NOT NULL)) AND (export.num_e_dati_pag_importo_totale_pagato = rendicontazione.num_dati_sing_pagam_singolo_importo_pagato))) OR ((((classificazione.mygov_classificazione_codice)::text = 'RT_NO_IUF'::text) AND (export.num_e_dati_pag_importo_totale_pagato IS NOT NULL)) AND ((rendicontazione.num_dati_sing_pagam_singolo_importo_pagato IS NULL) OR ((rendicontazione.num_dati_sing_pagam_singolo_importo_pagato IS NOT NULL) AND (export.num_e_dati_pag_importo_totale_pagato <> rendicontazione.num_dati_sing_pagam_singolo_importo_pagato))))) OR ((((classificazione.mygov_classificazione_codice)::text = 'IUF_NO_TES'::text) AND (rendicontazione.num_importo_totale_pagamenti IS NOT NULL)) AND (((tesoreria_iuf.num_importo IS NULL) AND (tesoreria_iuv.num_importo IS NULL)) OR (((tesoreria_iuf.num_importo IS NOT NULL) OR (tesoreria_iuv.num_importo IS NOT NULL)) AND (rendicontazione.num_importo_totale_pagamenti <> COALESCE(tesoreria_iuf.num_importo, tesoreria_iuv.num_importo)))))) OR (((((classificazione.mygov_classificazione_codice)::text = 'TES_NO_IUF_OR_IUV'::text) AND ((tesoreria_iuf.num_importo IS NOT NULL) OR (tesoreria_iuv.num_importo IS NOT NULL))) AND (rendicontazione.num_importo_totale_pagamenti IS NULL)) AND (export.num_e_dati_pag_importo_totale_pagato IS NULL))) OR ((((classificazione.mygov_classificazione_codice)::text = 'IUV_NO_RT'::text) AND (rendicontazione.num_importo_totale_pagamenti IS NOT NULL)) AND (export.num_e_dati_pag_importo_totale_pagato IS NULL)))));

CREATE VIEW mygov_import_export_rendicontazione_tesoreria_completa AS
SELECT import.mygov_ente_id AS mygov_ente_id_i, import.mygov_manage_flusso_id AS mygov_manage_flusso_id_i, import.cod_iud AS cod_iud_i, import.cod_rp_silinviarp_id_univoco_versamento AS cod_rp_silinviarp_id_univoco_versamento_i, import.cod_rp_sogg_pag_id_univ_pag_tipo_id_univoco AS cod_rp_sogg_pag_id_univ_pag_tipo_id_univoco_i, import.cod_rp_sogg_pag_id_univ_pag_codice_id_univoco AS cod_rp_sogg_pag_id_univ_pag_codice_id_univoco_i, import.de_rp_sogg_pag_anagrafica_pagatore AS de_rp_sogg_pag_anagrafica_pagatore_i, import.de_rp_sogg_pag_indirizzo_pagatore AS de_rp_sogg_pag_indirizzo_pagatore_i, import.de_rp_sogg_pag_civico_pagatore AS de_rp_sogg_pag_civico_pagatore_i, import.cod_rp_sogg_pag_cap_pagatore AS cod_rp_sogg_pag_cap_pagatore_i, import.de_rp_sogg_pag_localita_pagatore AS de_rp_sogg_pag_localita_pagatore_i, import.de_rp_sogg_pag_provincia_pagatore AS de_rp_sogg_pag_provincia_pagatore_i, import.cod_rp_sogg_pag_nazione_pagatore AS cod_rp_sogg_pag_nazione_pagatore_i, import.de_rp_sogg_pag_email_pagatore AS de_rp_sogg_pag_email_pagatore_i, import.dt_rp_dati_vers_data_esecuzione_pagamento AS dt_rp_dati_vers_data_esecuzione_pagamento_i, import.cod_rp_dati_vers_tipo_versamento AS cod_rp_dati_vers_tipo_versamento_i, import.num_rp_dati_vers_dati_sing_vers_importo_singolo_versamento AS num_rp_dati_vers_dati_sing_vers_importo_singolo_versamento_i, import.num_rp_dati_vers_dati_sing_vers_commissione_carico_pa AS num_rp_dati_vers_dati_sing_vers_commissione_carico_pa_i, import.de_rp_dati_vers_dati_sing_vers_causale_versamento AS de_rp_dati_vers_dati_sing_vers_causale_versamento_i, import.de_rp_dati_vers_dati_sing_vers_dati_specifici_riscossione AS de_rp_dati_vers_dati_sing_vers_dati_specifici_riscossione_i, import.cod_tipo_dovuto AS cod_tipo_dovuto_i, import.bilancio AS bilancio_i, export.mygov_ente_id AS mygov_ente_id_e, export.mygov_manage_flusso_id AS mygov_manage_flusso_id_e, export.de_nome_flusso AS de_nome_flusso_e, export.num_riga_flusso AS num_riga_flusso_e, export.cod_iud AS cod_iud_e, export.cod_rp_silinviarp_id_univoco_versamento AS cod_rp_silinviarp_id_univoco_versamento_e, export.de_e_versione_oggetto AS de_e_versione_oggetto_e, export.cod_e_dom_id_dominio AS cod_e_dom_id_dominio_e, export.cod_e_dom_id_stazione_richiedente AS cod_e_dom_id_stazione_richiedente_e, export.cod_e_id_messaggio_ricevuta AS cod_e_id_messaggio_ricevuta_e, export.dt_e_data_ora_messaggio_ricevuta AS dt_e_data_ora_messaggio_ricevuta_e, export.cod_e_riferimento_messaggio_richiesta AS cod_e_riferimento_messaggio_richiesta_e, export.dt_e_riferimento_data_richiesta AS dt_e_riferimento_data_richiesta_e, export.cod_e_istit_att_id_univ_att_tipo_id_univoco AS cod_e_istit_att_id_univ_att_tipo_id_univoco_e, export.cod_e_istit_att_id_univ_att_codice_id_univoco AS cod_e_istit_att_id_univ_att_codice_id_univoco_e, export.de_e_istit_att_denominazione_attestante AS de_e_istit_att_denominazione_attestante_e, export.cod_e_istit_att_codice_unit_oper_attestante AS cod_e_istit_att_codice_unit_oper_attestante_e, export.de_e_istit_att_denom_unit_oper_attestante AS de_e_istit_att_denom_unit_oper_attestante_e, export.de_e_istit_att_indirizzo_attestante AS de_e_istit_att_indirizzo_attestante_e, export.de_e_istit_att_civico_attestante AS de_e_istit_att_civico_attestante_e, export.cod_e_istit_att_cap_attestante AS cod_e_istit_att_cap_attestante_e, export.de_e_istit_att_localita_attestante AS de_e_istit_att_localita_attestante_e, export.de_e_istit_att_provincia_attestante AS de_e_istit_att_provincia_attestante_e, export.cod_e_istit_att_nazione_attestante AS cod_e_istit_att_nazione_attestante_e, export.cod_e_ente_benef_id_univ_benef_tipo_id_univoco AS cod_e_ente_benef_id_univ_benef_tipo_id_univoco_e, export.cod_e_ente_benef_id_univ_benef_codice_id_univoco AS cod_e_ente_benef_id_univ_benef_codice_id_univoco_e, export.de_e_ente_benef_denominazione_beneficiario AS de_e_ente_benef_denominazione_beneficiario_e, export.cod_e_ente_benef_codice_unit_oper_beneficiario AS cod_e_ente_benef_codice_unit_oper_beneficiario_e, export.de_e_ente_benef_denom_unit_oper_beneficiario AS de_e_ente_benef_denom_unit_oper_beneficiario_e, export.de_e_ente_benef_indirizzo_beneficiario AS de_e_ente_benef_indirizzo_beneficiario_e, export.de_e_ente_benef_civico_beneficiario AS de_e_ente_benef_civico_beneficiario_e, export.cod_e_ente_benef_cap_beneficiario AS cod_e_ente_benef_cap_beneficiario_e, export.de_e_ente_benef_localita_beneficiario AS de_e_ente_benef_localita_beneficiario_e, export.de_e_ente_benef_provincia_beneficiario AS de_e_ente_benef_provincia_beneficiario_e, export.cod_e_ente_benef_nazione_beneficiario AS cod_e_ente_benef_nazione_beneficiario_e, export.cod_e_sogg_vers_id_univ_vers_tipo_id_univoco AS cod_e_sogg_vers_id_univ_vers_tipo_id_univoco_e, export.cod_e_sogg_vers_id_univ_vers_codice_id_univoco AS cod_e_sogg_vers_id_univ_vers_codice_id_univoco_e, export.cod_e_sogg_vers_anagrafica_versante AS cod_e_sogg_vers_anagrafica_versante_e, export.de_e_sogg_vers_indirizzo_versante AS de_e_sogg_vers_indirizzo_versante_e, export.de_e_sogg_vers_civico_versante AS de_e_sogg_vers_civico_versante_e, export.cod_e_sogg_vers_cap_versante AS cod_e_sogg_vers_cap_versante_e, export.de_e_sogg_vers_localita_versante AS de_e_sogg_vers_localita_versante_e, export.de_e_sogg_vers_provincia_versante AS de_e_sogg_vers_provincia_versante_e, export.cod_e_sogg_vers_nazione_versante AS cod_e_sogg_vers_nazione_versante_e, export.de_e_sogg_vers_email_versante AS de_e_sogg_vers_email_versante_e, export.cod_e_sogg_pag_id_univ_pag_tipo_id_univoco AS cod_e_sogg_pag_id_univ_pag_tipo_id_univoco_e, export.cod_e_sogg_pag_id_univ_pag_codice_id_univoco AS cod_e_sogg_pag_id_univ_pag_codice_id_univoco_e, export.cod_e_sogg_pag_anagrafica_pagatore AS cod_e_sogg_pag_anagrafica_pagatore_e, export.de_e_sogg_pag_indirizzo_pagatore AS de_e_sogg_pag_indirizzo_pagatore_e, export.de_e_sogg_pag_civico_pagatore AS de_e_sogg_pag_civico_pagatore_e, export.cod_e_sogg_pag_cap_pagatore AS cod_e_sogg_pag_cap_pagatore_e, export.de_e_sogg_pag_localita_pagatore AS de_e_sogg_pag_localita_pagatore_e, export.de_e_sogg_pag_provincia_pagatore AS de_e_sogg_pag_provincia_pagatore_e, export.cod_e_sogg_pag_nazione_pagatore AS cod_e_sogg_pag_nazione_pagatore_e, export.de_e_sogg_pag_email_pagatore AS de_e_sogg_pag_email_pagatore_e, export.cod_e_dati_pag_codice_esito_pagamento AS cod_e_dati_pag_codice_esito_pagamento_e, export.num_e_dati_pag_importo_totale_pagato AS num_e_dati_pag_importo_totale_pagato_e, export.cod_e_dati_pag_id_univoco_versamento AS cod_e_dati_pag_id_univoco_versamento_e, export.cod_e_dati_pag_codice_contesto_pagamento AS cod_e_dati_pag_codice_contesto_pagamento_e, export.num_e_dati_pag_dati_sing_pag_singolo_importo_pagato AS num_e_dati_pag_dati_sing_pag_singolo_importo_pagato_e, export.de_e_dati_pag_dati_sing_pag_esito_singolo_pagamento AS de_e_dati_pag_dati_sing_pag_esito_singolo_pagamento_e, export.dt_e_dati_pag_dati_sing_pag_data_esito_singolo_pagamento AS dt_e_dati_pag_dati_sing_pag_data_esito_singolo_pagamento_e, export.cod_e_dati_pag_dati_sing_pag_id_univoco_riscoss AS cod_e_dati_pag_dati_sing_pag_id_univoco_riscoss_e, export.de_e_dati_pag_dati_sing_pag_causale_versamento AS de_e_dati_pag_dati_sing_pag_causale_versamento_e, export.de_e_dati_pag_dati_sing_pag_dati_specifici_riscossione AS de_e_dati_pag_dati_sing_pag_dati_specifici_riscossione_e, export.cod_tipo_dovuto AS cod_tipo_dovuto_e, export.dt_acquisizione AS dt_acquisizione_e, rendicontazione.mygov_ente_id AS mygov_ente_id_r, rendicontazione.mygov_manage_flusso_id AS mygov_manage_flusso_id_r, rendicontazione.versione_oggetto AS versione_oggetto_r, rendicontazione.cod_identificativo_flusso AS cod_identificativo_flusso_r, rendicontazione.dt_data_ora_flusso AS dt_data_ora_flusso_r, rendicontazione.cod_identificativo_univoco_regolamento AS cod_identificativo_univoco_regolamento_r, rendicontazione.dt_data_regolamento AS dt_data_regolamento_r, rendicontazione.cod_ist_mitt_id_univ_mitt_tipo_identificativo_univoco AS cod_ist_mitt_id_univ_mitt_tipo_identificativo_univoco_r, rendicontazione.cod_ist_mitt_id_univ_mitt_codice_identificativo_univoco AS cod_ist_mitt_id_univ_mitt_codice_identificativo_univoco_r, rendicontazione.de_ist_mitt_denominazione_mittente AS de_ist_mitt_denominazione_mittente_r, rendicontazione.cod_ist_ricev_id_univ_ricev_tipo_identificativo_univoco AS cod_ist_ricev_id_univ_ricev_tipo_identificativo_univoco_r, rendicontazione.cod_ist_ricev_id_univ_ricev_codice_identificativo_univoco AS cod_ist_ricev_id_univ_ricev_codice_identificativo_univoco_r, rendicontazione.de_ist_ricev_denominazione_ricevente AS de_ist_ricev_denominazione_ricevente_r, rendicontazione.num_numero_totale_pagamenti AS num_numero_totale_pagamenti_r, rendicontazione.num_importo_totale_pagamenti AS num_importo_totale_pagamenti_r, rendicontazione.cod_dati_sing_pagam_identificativo_univoco_versamento AS cod_dati_sing_pagam_identificativo_univoco_versamento_r, rendicontazione.cod_dati_sing_pagam_identificativo_univoco_riscossione AS cod_dati_sing_pagam_identificativo_univoco_riscossione_r, rendicontazione.num_dati_sing_pagam_singolo_importo_pagato AS num_dati_sing_pagam_singolo_importo_pagato_r, rendicontazione.cod_dati_sing_pagam_codice_esito_singolo_pagamento AS cod_dati_sing_pagam_codice_esito_singolo_pagamento_r, rendicontazione.dt_dati_sing_pagam_data_esito_singolo_pagamento AS dt_dati_sing_pagam_data_esito_singolo_pagamento_r, rendicontazione.dt_acquisizione AS dt_acquisizione_r, COALESCE(tesoreria_iuf.mygov_ente_id, tesoreria_iuv.mygov_ente_id) AS mygov_ente_id_t, COALESCE(tesoreria_iuf.mygov_manage_flusso_id, tesoreria_iuv.mygov_manage_flusso_id) AS mygov_manage_flusso_id_t, COALESCE(tesoreria_iuf.cod_abi, tesoreria_iuv.cod_abi) AS cod_abi_t, COALESCE(tesoreria_iuf.cod_cab, tesoreria_iuv.cod_cab) AS cod_cab_t, COALESCE(tesoreria_iuf.cod_conto, tesoreria_iuv.cod_conto) AS cod_conto_t, COALESCE(tesoreria_iuf.cod_divisa, tesoreria_iuv.cod_divisa) AS cod_divisa_t, COALESCE(tesoreria_iuf.dt_data_contabile, tesoreria_iuv.dt_data_contabile) AS dt_data_contabile_t, COALESCE(tesoreria_iuf.dt_data_valuta, tesoreria_iuv.dt_data_valuta) AS dt_data_valuta_t, COALESCE(tesoreria_iuf.num_importo, tesoreria_iuv.num_importo) AS num_importo_t, COALESCE(tesoreria_iuf.cod_segno, tesoreria_iuv.cod_segno) AS cod_segno_t, COALESCE(tesoreria_iuf.de_causale, tesoreria_iuv.de_causale) AS de_causale_t, COALESCE(tesoreria_iuf.cod_numero_assegno, tesoreria_iuv.cod_numero_assegno) AS cod_numero_assegno_t, COALESCE(tesoreria_iuf.cod_riferimento_banca, tesoreria_iuv.cod_riferimento_banca) AS cod_riferimento_banca_t, COALESCE(tesoreria_iuf.cod_riferimento_cliente, tesoreria_iuv.cod_riferimento_cliente) AS cod_riferimento_cliente_t, COALESCE(tesoreria_iuf.dt_data_ordine, tesoreria_iuv.dt_data_ordine) AS dt_data_ordine_t, COALESCE(tesoreria_iuf.de_descrizione_ordinante, tesoreria_iuv.de_descrizione_ordinante) AS de_descrizione_ordinante_t, COALESCE(tesoreria_iuf.cod_bi2, tesoreria_iuv.cod_bi2) AS cod_bi2_t, COALESCE(tesoreria_iuf.cod_be1, tesoreria_iuv.cod_be1) AS cod_be1_t, COALESCE(tesoreria_iuf.cod_ib1, tesoreria_iuv.cod_ib1) AS cod_ib1_t, COALESCE(tesoreria_iuf.cod_ib2, tesoreria_iuv.cod_ib2) AS cod_ib2_t, COALESCE(tesoreria_iuf.cod_ib4, tesoreria_iuv.cod_ib4) AS cod_ib4_t, COALESCE(tesoreria_iuf.cod_tid, tesoreria_iuv.cod_tid) AS cod_tid_t, COALESCE(tesoreria_iuf.cod_dte, tesoreria_iuv.cod_dte) AS cod_dte_t, COALESCE(tesoreria_iuf.cod_dtn, tesoreria_iuv.cod_dtn) AS cod_dtn_t, COALESCE(tesoreria_iuf.cod_eri, tesoreria_iuv.cod_eri) AS cod_eri_t, COALESCE(tesoreria_iuf.cod_im2, tesoreria_iuv.cod_im2) AS cod_im2_t, COALESCE(tesoreria_iuf.cod_ma2, tesoreria_iuv.cod_ma2) AS cod_ma2_t, COALESCE(tesoreria_iuf.cod_ri3, tesoreria_iuv.cod_ri3) AS cod_ri3_t, COALESCE(tesoreria_iuf.cod_or1, tesoreria_iuv.cod_or1) AS cod_or1_t, COALESCE(tesoreria_iuf.cod_sc2, tesoreria_iuv.cod_sc2) AS cod_sc2_t, COALESCE(tesoreria_iuf.cod_tr1, tesoreria_iuv.cod_tr1) AS cod_tr1_t, COALESCE(tesoreria_iuf.cod_sec, tesoreria_iuv.cod_sec) AS cod_sec_t, COALESCE(tesoreria_iuf.cod_ior, tesoreria_iuv.cod_ior) AS cod_ior_t, tesoreria_iuf.cod_id_univoco_flusso AS cod_id_univoco_flusso_t, tesoreria_iuv.cod_id_univoco_versamento AS cod_id_univoco_versamento_t, COALESCE(tesoreria_iuf.dt_acquisizione, tesoreria_iuf.dt_acquisizione) AS dt_acquisizione_t, classificazione.mygov_classificazione_codice AS classificazione_completezza FROM (((((mygov_flusso_import import FULL JOIN mygov_flusso_export export ON (((import.mygov_ente_id = export.mygov_ente_id) AND ((import.cod_iud)::text = (export.cod_iud)::text)))) FULL JOIN mygov_flusso_rendicontazione rendicontazione ON (((((export.mygov_ente_id = rendicontazione.mygov_ente_id) AND ((export.cod_rp_silinviarp_id_univoco_versamento)::text = (rendicontazione.cod_dati_sing_pagam_identificativo_univoco_versamento)::text)) AND ((export.cod_e_dati_pag_dati_sing_pag_id_univoco_riscoss)::text = (rendicontazione.cod_dati_sing_pagam_identificativo_univoco_riscossione)::text)) AND (export.indice_dati_singolo_pagamento = rendicontazione.indice_dati_singolo_pagamento)))) FULL JOIN (SELECT mygov_flusso_tesoreria_iuf.mygov_ente_id, mygov_flusso_tesoreria_iuf.mygov_manage_flusso_id, mygov_flusso_tesoreria_iuf.cod_abi, mygov_flusso_tesoreria_iuf.cod_cab, mygov_flusso_tesoreria_iuf.cod_conto, mygov_flusso_tesoreria_iuf.cod_divisa, mygov_flusso_tesoreria_iuf.dt_data_contabile, mygov_flusso_tesoreria_iuf.dt_data_valuta, mygov_flusso_tesoreria_iuf.num_importo, mygov_flusso_tesoreria_iuf.cod_segno, mygov_flusso_tesoreria_iuf.de_causale, mygov_flusso_tesoreria_iuf.cod_numero_assegno, mygov_flusso_tesoreria_iuf.cod_riferimento_banca, mygov_flusso_tesoreria_iuf.cod_riferimento_cliente, mygov_flusso_tesoreria_iuf.dt_data_ordine, mygov_flusso_tesoreria_iuf.de_descrizione_ordinante, mygov_flusso_tesoreria_iuf.cod_bi2, mygov_flusso_tesoreria_iuf.cod_be1, mygov_flusso_tesoreria_iuf.cod_ib1, mygov_flusso_tesoreria_iuf.cod_ib2, mygov_flusso_tesoreria_iuf.cod_ib4, mygov_flusso_tesoreria_iuf.cod_tid, mygov_flusso_tesoreria_iuf.cod_dte, mygov_flusso_tesoreria_iuf.cod_dtn, mygov_flusso_tesoreria_iuf.cod_eri, mygov_flusso_tesoreria_iuf.cod_im2, mygov_flusso_tesoreria_iuf.cod_ma2, mygov_flusso_tesoreria_iuf.cod_ri3, mygov_flusso_tesoreria_iuf.cod_or1, mygov_flusso_tesoreria_iuf.cod_sc2, mygov_flusso_tesoreria_iuf.cod_tr1, mygov_flusso_tesoreria_iuf.cod_sec, mygov_flusso_tesoreria_iuf.cod_ior, mygov_flusso_tesoreria_iuf.cod_id_univoco_flusso, NULL::character varying AS cod_id_univoco_versamento, mygov_flusso_tesoreria_iuf.dt_acquisizione FROM mygov_flusso_tesoreria_iuf) tesoreria_iuf ON (((tesoreria_iuf.cod_id_univoco_flusso)::text = (rendicontazione.cod_identificativo_flusso)::text))) FULL JOIN (SELECT mygov_flusso_tesoreria_iuv.mygov_ente_id, mygov_flusso_tesoreria_iuv.mygov_manage_flusso_id, mygov_flusso_tesoreria_iuv.cod_abi, mygov_flusso_tesoreria_iuv.cod_cab, mygov_flusso_tesoreria_iuv.cod_conto, mygov_flusso_tesoreria_iuv.cod_divisa, mygov_flusso_tesoreria_iuv.dt_data_contabile, mygov_flusso_tesoreria_iuv.dt_data_valuta, mygov_flusso_tesoreria_iuv.num_importo, mygov_flusso_tesoreria_iuv.cod_segno, mygov_flusso_tesoreria_iuv.de_causale, mygov_flusso_tesoreria_iuv.cod_numero_assegno, mygov_flusso_tesoreria_iuv.cod_riferimento_banca, mygov_flusso_tesoreria_iuv.cod_riferimento_cliente, mygov_flusso_tesoreria_iuv.dt_data_ordine, mygov_flusso_tesoreria_iuv.de_descrizione_ordinante, mygov_flusso_tesoreria_iuv.cod_bi2, mygov_flusso_tesoreria_iuv.cod_be1, mygov_flusso_tesoreria_iuv.cod_ib1, mygov_flusso_tesoreria_iuv.cod_ib2, mygov_flusso_tesoreria_iuv.cod_ib4, mygov_flusso_tesoreria_iuv.cod_tid, mygov_flusso_tesoreria_iuv.cod_dte, mygov_flusso_tesoreria_iuv.cod_dtn, mygov_flusso_tesoreria_iuv.cod_eri, mygov_flusso_tesoreria_iuv.cod_im2, mygov_flusso_tesoreria_iuv.cod_ma2, mygov_flusso_tesoreria_iuv.cod_ri3, mygov_flusso_tesoreria_iuv.cod_or1, mygov_flusso_tesoreria_iuv.cod_sc2, mygov_flusso_tesoreria_iuv.cod_tr1, mygov_flusso_tesoreria_iuv.cod_sec, mygov_flusso_tesoreria_iuv.cod_ior, NULL::character varying AS cod_id_univoco_flusso, mygov_flusso_tesoreria_iuv.cod_id_univoco_versamento, mygov_flusso_tesoreria_iuv.dt_acquisizione FROM mygov_flusso_tesoreria_iuv) tesoreria_iuv ON (((COALESCE(export.mygov_ente_id, rendicontazione.mygov_ente_id) = tesoreria_iuv.mygov_ente_id) AND ((COALESCE(export.cod_rp_silinviarp_id_univoco_versamento, rendicontazione.cod_dati_sing_pagam_identificativo_univoco_versamento))::text = (tesoreria_iuv.cod_id_univoco_versamento)::text)))) LEFT JOIN mygov_classificazione_completezza classificazione ON ((((((((((((((((classificazione.mygov_classificazione_codice)::text = 'IUD_RT_IUF_TES'::text) AND (import.num_rp_dati_vers_dati_sing_vers_importo_singolo_versamento IS NOT NULL)) AND (export.num_e_dati_pag_importo_totale_pagato IS NOT NULL)) AND (import.num_rp_dati_vers_dati_sing_vers_importo_singolo_versamento = export.num_e_dati_pag_importo_totale_pagato)) AND ((((((rendicontazione.num_dati_sing_pagam_singolo_importo_pagato IS NOT NULL) AND (export.num_e_dati_pag_importo_totale_pagato = rendicontazione.num_dati_sing_pagam_singolo_importo_pagato)) AND (rendicontazione.num_importo_totale_pagamenti IS NOT NULL)) AND (tesoreria_iuf.num_importo IS NOT NULL)) AND (rendicontazione.num_importo_totale_pagamenti = tesoreria_iuf.num_importo)) OR ((tesoreria_iuv.num_importo IS NOT NULL) AND (export.num_e_dati_pag_importo_totale_pagato = tesoreria_iuv.num_importo)))) OR (((((((classificazione.mygov_classificazione_codice)::text = 'IUD_RT_IUF'::text) AND (import.num_rp_dati_vers_dati_sing_vers_importo_singolo_versamento IS NOT NULL)) AND (export.num_e_dati_pag_importo_totale_pagato IS NOT NULL)) AND (import.num_rp_dati_vers_dati_sing_vers_importo_singolo_versamento = export.num_e_dati_pag_importo_totale_pagato)) AND (rendicontazione.num_dati_sing_pagam_singolo_importo_pagato IS NOT NULL)) AND (export.num_e_dati_pag_importo_totale_pagato = rendicontazione.num_dati_sing_pagam_singolo_importo_pagato))) OR ((((classificazione.mygov_classificazione_codice)::text = 'RT_IUF_TES'::text) AND (export.num_e_dati_pag_importo_totale_pagato IS NOT NULL)) AND ((((((rendicontazione.num_dati_sing_pagam_singolo_importo_pagato IS NOT NULL) AND (export.num_e_dati_pag_importo_totale_pagato = rendicontazione.num_dati_sing_pagam_singolo_importo_pagato)) AND (rendicontazione.num_importo_totale_pagamenti IS NOT NULL)) AND (tesoreria_iuf.num_importo IS NOT NULL)) AND (rendicontazione.num_importo_totale_pagamenti = tesoreria_iuf.num_importo)) OR ((tesoreria_iuv.num_importo IS NOT NULL) AND (export.num_e_dati_pag_importo_totale_pagato = tesoreria_iuv.num_importo))))) OR (((((classificazione.mygov_classificazione_codice)::text = 'RT_IUF'::text) AND (export.num_e_dati_pag_importo_totale_pagato IS NOT NULL)) AND (rendicontazione.num_dati_sing_pagam_singolo_importo_pagato IS NOT NULL)) AND (export.num_e_dati_pag_importo_totale_pagato = rendicontazione.num_dati_sing_pagam_singolo_importo_pagato))) OR ((((classificazione.mygov_classificazione_codice)::text = 'RT_NO_IUF'::text) AND (export.num_e_dati_pag_importo_totale_pagato IS NOT NULL)) AND ((rendicontazione.num_dati_sing_pagam_singolo_importo_pagato IS NULL) OR ((rendicontazione.num_dati_sing_pagam_singolo_importo_pagato IS NOT NULL) AND (export.num_e_dati_pag_importo_totale_pagato <> rendicontazione.num_dati_sing_pagam_singolo_importo_pagato))))) OR ((((classificazione.mygov_classificazione_codice)::text = 'IUF_NO_TES'::text) AND (rendicontazione.num_importo_totale_pagamenti IS NOT NULL)) AND (((tesoreria_iuf.num_importo IS NULL) AND (tesoreria_iuv.num_importo IS NULL)) OR (((tesoreria_iuf.num_importo IS NOT NULL) OR (tesoreria_iuv.num_importo IS NOT NULL)) AND (rendicontazione.num_importo_totale_pagamenti <> COALESCE(tesoreria_iuf.num_importo, tesoreria_iuv.num_importo)))))) OR (((((classificazione.mygov_classificazione_codice)::text = 'TES_NO_IUF_OR_IUV'::text) AND ((tesoreria_iuf.num_importo IS NOT NULL) OR (tesoreria_iuv.num_importo IS NOT NULL))) AND (rendicontazione.num_importo_totale_pagamenti IS NULL)) AND (export.num_e_dati_pag_importo_totale_pagato IS NULL))) OR ((((classificazione.mygov_classificazione_codice)::text = 'IUV_NO_RT'::text) AND (rendicontazione.num_importo_totale_pagamenti IS NOT NULL)) AND (export.num_e_dati_pag_importo_totale_pagato IS NULL))) OR ((((classificazione.mygov_classificazione_codice)::text = 'IUD_NO_RT'::text) AND (import.num_rp_dati_vers_dati_sing_vers_importo_singolo_versamento IS NOT NULL)) AND ((export.num_e_dati_pag_importo_totale_pagato IS NULL) OR ((export.num_e_dati_pag_importo_totale_pagato IS NOT NULL) AND (import.num_rp_dati_vers_dati_sing_vers_importo_singolo_versamento <> export.num_e_dati_pag_importo_totale_pagato))))) OR ((((classificazione.mygov_classificazione_codice)::text = 'RT_NO_IUD'::text) AND (export.num_e_dati_pag_importo_totale_pagato IS NOT NULL)) AND (import.num_rp_dati_vers_dati_sing_vers_importo_singolo_versamento IS NULL)))));

CREATE VIEW v_mygov_export_rendicontazione AS
SELECT ente.cod_ipa_ente AS codice_ipa_ente, (COALESCE(export_rendicontazione.de_nome_flusso_e, 'n/a'::character varying))::character varying(50) AS nome_flusso_import_ente, (COALESCE((export_rendicontazione.num_riga_flusso_e)::character varying(12), 'n/a'::character varying))::character varying(12) AS riga_flusso_import_ente, (COALESCE(export_rendicontazione.cod_iud_e, 'n/a'::character varying))::character varying(35) AS codice_iud, COALESCE(export_rendicontazione.cod_rp_silinviarp_id_univoco_versamento_e, export_rendicontazione.cod_dati_sing_pagam_identificativo_univoco_versamento_r) AS codice_iuv, (COALESCE(export_rendicontazione.de_e_versione_oggetto_e, ''::character varying))::character varying(16) AS versione_oggetto, (COALESCE(export_rendicontazione.cod_e_dom_id_dominio_e, ''::character varying))::character varying(35) AS identificativo_dominio, (COALESCE(export_rendicontazione.cod_e_dom_id_stazione_richiedente_e, ''::character varying))::character varying(35) AS identificativo_stazione_richiedente, (COALESCE(export_rendicontazione.cod_e_id_messaggio_ricevuta_e, ''::character varying))::character varying(35) AS identificativo_messaggio_ricevuta, (COALESCE(to_char(export_rendicontazione.dt_e_data_ora_messaggio_ricevuta_e, 'dd-MM-yyyy HH:mm:ss'::text), ''::text))::character varying(19) AS data_ora_messaggio_ricevuta, (COALESCE(export_rendicontazione.cod_e_riferimento_messaggio_richiesta_e, ''::character varying))::character varying(35) AS riferimento_messaggio_richiesta, (COALESCE(to_char((export_rendicontazione.dt_e_riferimento_data_richiesta_e)::timestamp with time zone, 'dd-MM-yyyy'::text), ''::text))::character varying(10) AS riferimento_data_richiesta, (COALESCE(export_rendicontazione.cod_e_istit_att_id_univ_att_tipo_id_univoco_e, ''::bpchar))::character varying(1) AS tipo_identificativo_univoco_attestante, (COALESCE(export_rendicontazione.cod_e_istit_att_id_univ_att_codice_id_univoco_e, ''::character varying))::character varying(35) AS codice_identificativo_univoco_attestante, (COALESCE(export_rendicontazione.de_e_istit_att_denominazione_attestante_e, ''::character varying))::character varying(70) AS denominazione_attestante, (COALESCE(export_rendicontazione.cod_e_istit_att_codice_unit_oper_attestante_e, ''::character varying))::character varying(35) AS codice_unit_oper_attestante, (COALESCE(export_rendicontazione.de_e_istit_att_denom_unit_oper_attestante_e, ''::character varying))::character varying(70) AS denom_unit_oper_attestante, (COALESCE(export_rendicontazione.de_e_istit_att_indirizzo_attestante_e, ''::character varying))::character varying(70) AS indirizzo_attestante, (COALESCE(export_rendicontazione.de_e_istit_att_civico_attestante_e, ''::character varying))::character varying(16) AS civico_attestante, (COALESCE(export_rendicontazione.cod_e_istit_att_cap_attestante_e, ''::character varying))::character varying(16) AS cap_attestante, (COALESCE(export_rendicontazione.de_e_istit_att_localita_attestante_e, ''::character varying))::character varying(35) AS localita_attestante, (COALESCE(export_rendicontazione.de_e_istit_att_provincia_attestante_e, ''::character varying))::character varying(35) AS provincia_attestante, (COALESCE(export_rendicontazione.cod_e_istit_att_nazione_attestante_e, ''::character varying))::character varying(2) AS nazione_attestante, (COALESCE(export_rendicontazione.cod_e_ente_benef_id_univ_benef_tipo_id_univoco_e, ''::bpchar))::character varying(1) AS tipo_identificativo_univoco_beneficiario, (COALESCE(export_rendicontazione.cod_e_ente_benef_id_univ_benef_codice_id_univoco_e, ''::character varying))::character varying(35) AS codice_identificativo_univoco_beneficiario, (COALESCE(export_rendicontazione.de_e_ente_benef_denominazione_beneficiario_e, ''::character varying))::character varying(70) AS denominazione_beneficiario, (COALESCE(export_rendicontazione.cod_e_ente_benef_codice_unit_oper_beneficiario_e, ''::character varying))::character varying(35) AS codice_unit_oper_beneficiario, (COALESCE(export_rendicontazione.de_e_ente_benef_denom_unit_oper_beneficiario_e, ''::character varying))::character varying(70) AS denom_unit_oper_beneficiario, (COALESCE(export_rendicontazione.de_e_ente_benef_indirizzo_beneficiario_e, ''::character varying))::character varying(70) AS indirizzo_beneficiario, (COALESCE(export_rendicontazione.de_e_ente_benef_civico_beneficiario_e, ''::character varying))::character varying(16) AS civico_beneficiario, (COALESCE(export_rendicontazione.cod_e_ente_benef_cap_beneficiario_e, ''::character varying))::character varying(16) AS cap_beneficiario, (COALESCE(export_rendicontazione.de_e_ente_benef_localita_beneficiario_e, ''::character varying))::character varying(35) AS localita_beneficiario, (COALESCE(export_rendicontazione.de_e_ente_benef_provincia_beneficiario_e, ''::character varying))::character varying(2) AS provincia_beneficiario, (COALESCE(export_rendicontazione.cod_e_ente_benef_nazione_beneficiario_e, ''::character varying))::character varying(2) AS nazione_beneficiario, (COALESCE(export_rendicontazione.cod_e_sogg_vers_id_univ_vers_tipo_id_univoco_e, ''::bpchar))::character varying(1) AS tipo_identificativo_univoco_versante, (COALESCE(export_rendicontazione.cod_e_sogg_vers_id_univ_vers_codice_id_univoco_e, ''::character varying))::character varying(35) AS codice_identificativo_univoco_versante, (COALESCE(export_rendicontazione.cod_e_sogg_vers_anagrafica_versante_e, ''::character varying))::character varying(70) AS anagrafica_versante, (COALESCE(export_rendicontazione.de_e_sogg_vers_indirizzo_versante_e, ''::character varying))::character varying(70) AS indirizzo_versante, (COALESCE(export_rendicontazione.de_e_sogg_vers_civico_versante_e, ''::character varying))::character varying(16) AS civico_versante, (COALESCE(export_rendicontazione.cod_e_sogg_vers_cap_versante_e, ''::character varying))::character varying(16) AS cap_versante, (COALESCE(export_rendicontazione.de_e_sogg_vers_localita_versante_e, ''::character varying))::character varying(35) AS localita_versante, (COALESCE(export_rendicontazione.de_e_sogg_vers_provincia_versante_e, ''::character varying))::character varying(35) AS provincia_versante, (COALESCE(export_rendicontazione.cod_e_sogg_vers_nazione_versante_e, ''::character varying))::character varying(2) AS nazione_versante, (COALESCE(export_rendicontazione.de_e_sogg_vers_email_versante_e, ''::character varying))::character varying(256) AS email_versante, (COALESCE(export_rendicontazione.cod_e_sogg_pag_id_univ_pag_tipo_id_univoco_e, ''::bpchar))::character varying(1) AS tipo_identificativo_univoco_pagatore, (COALESCE(export_rendicontazione.cod_e_sogg_pag_id_univ_pag_codice_id_univoco_e, ''::character varying))::character varying(35) AS codice_identificativo_univoco_pagatore, (COALESCE(export_rendicontazione.cod_e_sogg_pag_anagrafica_pagatore_e, ''::character varying))::character varying(70) AS anagrafica_pagatore, (COALESCE(export_rendicontazione.de_e_sogg_pag_indirizzo_pagatore_e, ''::character varying))::character varying(70) AS indirizzo_pagatore, (COALESCE(export_rendicontazione.de_e_sogg_pag_civico_pagatore_e, ''::character varying))::character varying(16) AS civico_pagatore, (COALESCE(export_rendicontazione.cod_e_sogg_pag_cap_pagatore_e, ''::character varying))::character varying(16) AS cap_pagatore, (COALESCE(export_rendicontazione.de_e_sogg_pag_localita_pagatore_e, ''::character varying))::character varying(35) AS localita_pagatore, (COALESCE(export_rendicontazione.de_e_sogg_pag_provincia_pagatore_e, ''::character varying))::character varying(35) AS provincia_pagatore, (COALESCE(export_rendicontazione.cod_e_sogg_pag_nazione_pagatore_e, ''::character varying))::character varying(2) AS nazione_pagatore, (COALESCE(export_rendicontazione.de_e_sogg_pag_email_pagatore_e, ''::character varying))::character varying(256) AS email_pagatore, (COALESCE(export_rendicontazione.cod_e_dati_pag_codice_esito_pagamento_e, ''::bpchar))::character varying(1) AS codice_esito_pagamento, (COALESCE((export_rendicontazione.num_e_dati_pag_importo_totale_pagato_e)::character varying(15), ''::character varying))::character varying(15) AS importo_totale_pagato, (COALESCE(export_rendicontazione.cod_e_dati_pag_id_univoco_versamento_e, ''::character varying))::character varying(35) AS identificativo_univoco_versamento, (COALESCE(export_rendicontazione.cod_e_dati_pag_codice_contesto_pagamento_e, ''::character varying))::character varying(35) AS codice_contesto_pagamento, (COALESCE((export_rendicontazione.num_e_dati_pag_dati_sing_pag_singolo_importo_pagato_e)::character varying(15), (export_rendicontazione.num_dati_sing_pagam_singolo_importo_pagato_r)::character varying(15), ''::character varying))::character varying(15) AS singolo_importo_pagato, (COALESCE(export_rendicontazione.de_e_dati_pag_dati_sing_pag_esito_singolo_pagamento_e, export_rendicontazione.cod_dati_sing_pagam_codice_esito_singolo_pagamento_r, ''::character varying))::character varying(35) AS esito_singolo_pagamento, COALESCE(export_rendicontazione.dt_dati_sing_pagam_data_esito_singolo_pagamento_r, export_rendicontazione.dt_e_dati_pag_dati_sing_pag_data_esito_singolo_pagamento_e) AS dt_data_esito_singolo_pagamento, (COALESCE(to_char((export_rendicontazione.dt_e_dati_pag_dati_sing_pag_data_esito_singolo_pagamento_e)::timestamp with time zone, 'dd-MM-yyyy'::text), ''::text))::character varying(10) AS de_data_esito_singolo_pagamento, (COALESCE(export_rendicontazione.cod_e_dati_pag_dati_sing_pag_id_univoco_riscoss_e, export_rendicontazione.cod_dati_sing_pagam_identificativo_univoco_riscossione_r, 'n/a'::character varying))::character varying(35) AS identificativo_univoco_riscossione, (COALESCE(export_rendicontazione.de_e_dati_pag_dati_sing_pag_causale_versamento_e, ''::character varying))::character varying(140) AS causale_versamento, (COALESCE(export_rendicontazione.de_e_dati_pag_dati_sing_pag_dati_specifici_riscossione_e, ''::character varying))::character varying(140) AS dati_specifici_riscossione, (COALESCE(export_rendicontazione.cod_tipo_dovuto_e, ''::character varying))::character varying(64) AS tipo_dovuto, (COALESCE(export_rendicontazione.cod_identificativo_flusso_r, 'n/a'::character varying))::character varying(35) AS identificativo_flusso_rendicontazione, (COALESCE(to_char(export_rendicontazione.dt_data_ora_flusso_r, 'dd-MM-yyyy HH:mm:ss'::text), 'n/a'::text))::character varying(19) AS data_ora_flusso_rendicontazione, (COALESCE(export_rendicontazione.cod_identificativo_univoco_regolamento_r, 'n/a'::character varying))::character varying(35) AS identificativo_univoco_regolamento, COALESCE(export_rendicontazione.dt_data_regolamento_r, (export_rendicontazione.dt_e_dati_pag_dati_sing_pag_data_esito_singolo_pagamento_e + ente.num_giorni_pagamento_presunti)) AS dt_data_regolamento, (to_char((COALESCE(export_rendicontazione.dt_data_regolamento_r, (export_rendicontazione.dt_e_dati_pag_dati_sing_pag_data_esito_singolo_pagamento_e + ente.num_giorni_pagamento_presunti)))::timestamp with time zone, 'dd-MM-yyyy'::text))::character varying(10) AS de_data_regolamento, (COALESCE((export_rendicontazione.num_numero_totale_pagamenti_r)::character varying(15), 'n/a'::character varying))::character varying(15) AS numero_totale_pagamenti, (COALESCE((export_rendicontazione.num_importo_totale_pagamenti_r)::character varying(15), 'n/a'::character varying))::character varying(21) AS importo_totale_pagamenti, (to_char((GREATEST(export_rendicontazione.dt_acquisizione_r, export_rendicontazione.dt_acquisizione_e))::timestamp with time zone, 'dd-MM-yyyy'::text))::character varying(10) AS data_acquisizione, CASE WHEN ((sum(export_rendicontazione.num_dati_sing_pagam_singolo_importo_pagato_r) OVER (PARTITION BY export_rendicontazione.cod_identificativo_flusso_r) - export_rendicontazione.num_importo_totale_pagamenti_r) = (0)::numeric) THEN 'OK'::character varying(3) WHEN ((sum(export_rendicontazione.num_dati_sing_pagam_singolo_importo_pagato_r) OVER (PARTITION BY export_rendicontazione.cod_identificativo_flusso_r) - export_rendicontazione.num_importo_totale_pagamenti_r) <> (0)::numeric) THEN 'KO'::character varying(3) ELSE 'n/a'::character varying(3) END AS verifica_totale, (COALESCE(export_rendicontazione.classificazione_completezza, 'OTHERS'::character varying))::character varying(20) AS classificazione_completezza FROM mygov_export_rendicontazione_completa export_rendicontazione, mygov_ente ente WHERE (COALESCE(export_rendicontazione.mygov_ente_id_e, export_rendicontazione.mygov_ente_id_r) = ente.mygov_ente_id);

CREATE VIEW v_mygov_export_rendicontazione_tesoreria AS
SELECT ente.cod_ipa_ente AS codice_ipa_ente, (COALESCE(export_rendicontazione_tesoreria.de_nome_flusso_e, 'n/a'::character varying))::character varying(50) AS nome_flusso_import_ente, (COALESCE((export_rendicontazione_tesoreria.num_riga_flusso_e)::character varying(12), 'n/a'::character varying))::character varying(12) AS riga_flusso_import_ente, (COALESCE(export_rendicontazione_tesoreria.cod_iud_e, 'n/a'::character varying))::character varying(35) AS codice_iud, (COALESCE(export_rendicontazione_tesoreria.cod_rp_silinviarp_id_univoco_versamento_e, export_rendicontazione_tesoreria.cod_dati_sing_pagam_identificativo_univoco_versamento_r, export_rendicontazione_tesoreria.cod_id_univoco_versamento_t, 'n/a'::character varying))::character varying(35) AS codice_iuv, (COALESCE(export_rendicontazione_tesoreria.de_e_versione_oggetto_e, ''::character varying))::character varying(16) AS versione_oggetto, (COALESCE(export_rendicontazione_tesoreria.cod_e_dom_id_dominio_e, ''::character varying))::character varying(35) AS identificativo_dominio, (COALESCE(export_rendicontazione_tesoreria.cod_e_dom_id_stazione_richiedente_e, ''::character varying))::character varying(35) AS identificativo_stazione_richiedente, (COALESCE(export_rendicontazione_tesoreria.cod_e_id_messaggio_ricevuta_e, ''::character varying))::character varying(35) AS identificativo_messaggio_ricevuta, (COALESCE(to_char(export_rendicontazione_tesoreria.dt_e_data_ora_messaggio_ricevuta_e, 'dd-MM-yyyy HH:mm:ss'::text), ''::text))::character varying(19) AS data_ora_messaggio_ricevuta, (COALESCE(export_rendicontazione_tesoreria.cod_e_riferimento_messaggio_richiesta_e, ''::character varying))::character varying(35) AS riferimento_messaggio_richiesta, (COALESCE(to_char((export_rendicontazione_tesoreria.dt_e_riferimento_data_richiesta_e)::timestamp with time zone, 'dd-MM-yyyy'::text), ''::text))::character varying(10) AS riferimento_data_richiesta, (COALESCE(export_rendicontazione_tesoreria.cod_e_istit_att_id_univ_att_tipo_id_univoco_e, ''::bpchar))::character varying(1) AS tipo_identificativo_univoco_attestante, (COALESCE(export_rendicontazione_tesoreria.cod_e_istit_att_id_univ_att_codice_id_univoco_e, ''::character varying))::character varying(35) AS codice_identificativo_univoco_attestante, (COALESCE(export_rendicontazione_tesoreria.de_e_istit_att_denominazione_attestante_e, ''::character varying))::character varying(70) AS denominazione_attestante, (COALESCE(export_rendicontazione_tesoreria.cod_e_istit_att_codice_unit_oper_attestante_e, ''::character varying))::character varying(35) AS codice_unit_oper_attestante, (COALESCE(export_rendicontazione_tesoreria.de_e_istit_att_denom_unit_oper_attestante_e, ''::character varying))::character varying(70) AS denom_unit_oper_attestante, (COALESCE(export_rendicontazione_tesoreria.de_e_istit_att_indirizzo_attestante_e, ''::character varying))::character varying(70) AS indirizzo_attestante, (COALESCE(export_rendicontazione_tesoreria.de_e_istit_att_civico_attestante_e, ''::character varying))::character varying(16) AS civico_attestante, (COALESCE(export_rendicontazione_tesoreria.cod_e_istit_att_cap_attestante_e, ''::character varying))::character varying(16) AS cap_attestante, (COALESCE(export_rendicontazione_tesoreria.de_e_istit_att_localita_attestante_e, ''::character varying))::character varying(35) AS localita_attestante, (COALESCE(export_rendicontazione_tesoreria.de_e_istit_att_provincia_attestante_e, ''::character varying))::character varying(35) AS provincia_attestante, (COALESCE(export_rendicontazione_tesoreria.cod_e_istit_att_nazione_attestante_e, ''::character varying))::character varying(2) AS nazione_attestante, (COALESCE(export_rendicontazione_tesoreria.cod_e_ente_benef_id_univ_benef_tipo_id_univoco_e, ''::bpchar))::character varying(1) AS tipo_identificativo_univoco_beneficiario, (COALESCE(export_rendicontazione_tesoreria.cod_e_ente_benef_id_univ_benef_codice_id_univoco_e, ''::character varying))::character varying(35) AS codice_identificativo_univoco_beneficiario, (COALESCE(export_rendicontazione_tesoreria.de_e_ente_benef_denominazione_beneficiario_e, ''::character varying))::character varying(70) AS denominazione_beneficiario, (COALESCE(export_rendicontazione_tesoreria.cod_e_ente_benef_codice_unit_oper_beneficiario_e, ''::character varying))::character varying(35) AS codice_unit_oper_beneficiario, (COALESCE(export_rendicontazione_tesoreria.de_e_ente_benef_denom_unit_oper_beneficiario_e, ''::character varying))::character varying(70) AS denom_unit_oper_beneficiario, (COALESCE(export_rendicontazione_tesoreria.de_e_ente_benef_indirizzo_beneficiario_e, ''::character varying))::character varying(70) AS indirizzo_beneficiario, (COALESCE(export_rendicontazione_tesoreria.de_e_ente_benef_civico_beneficiario_e, ''::character varying))::character varying(16) AS civico_beneficiario, (COALESCE(export_rendicontazione_tesoreria.cod_e_ente_benef_cap_beneficiario_e, ''::character varying))::character varying(16) AS cap_beneficiario, (COALESCE(export_rendicontazione_tesoreria.de_e_ente_benef_localita_beneficiario_e, ''::character varying))::character varying(35) AS localita_beneficiario, (COALESCE(export_rendicontazione_tesoreria.de_e_ente_benef_provincia_beneficiario_e, ''::character varying))::character varying(2) AS provincia_beneficiario, (COALESCE(export_rendicontazione_tesoreria.cod_e_ente_benef_nazione_beneficiario_e, ''::character varying))::character varying(2) AS nazione_beneficiario, (COALESCE(export_rendicontazione_tesoreria.cod_e_sogg_vers_id_univ_vers_tipo_id_univoco_e, ''::bpchar))::character varying(1) AS tipo_identificativo_univoco_versante, (COALESCE(export_rendicontazione_tesoreria.cod_e_sogg_vers_id_univ_vers_codice_id_univoco_e, ''::character varying))::character varying(35) AS codice_identificativo_univoco_versante, (COALESCE(export_rendicontazione_tesoreria.cod_e_sogg_vers_anagrafica_versante_e, ''::character varying))::character varying(70) AS anagrafica_versante, (COALESCE(export_rendicontazione_tesoreria.de_e_sogg_vers_indirizzo_versante_e, ''::character varying))::character varying(70) AS indirizzo_versante, (COALESCE(export_rendicontazione_tesoreria.de_e_sogg_vers_civico_versante_e, ''::character varying))::character varying(16) AS civico_versante, (COALESCE(export_rendicontazione_tesoreria.cod_e_sogg_vers_cap_versante_e, ''::character varying))::character varying(16) AS cap_versante, (COALESCE(export_rendicontazione_tesoreria.de_e_sogg_vers_localita_versante_e, ''::character varying))::character varying(35) AS localita_versante, (COALESCE(export_rendicontazione_tesoreria.de_e_sogg_vers_provincia_versante_e, ''::character varying))::character varying(35) AS provincia_versante, (COALESCE(export_rendicontazione_tesoreria.cod_e_sogg_vers_nazione_versante_e, ''::character varying))::character varying(2) AS nazione_versante, (COALESCE(export_rendicontazione_tesoreria.de_e_sogg_vers_email_versante_e, ''::character varying))::character varying(256) AS email_versante, (COALESCE(export_rendicontazione_tesoreria.cod_e_sogg_pag_id_univ_pag_tipo_id_univoco_e, ''::bpchar))::character varying(1) AS tipo_identificativo_univoco_pagatore, (COALESCE(export_rendicontazione_tesoreria.cod_e_sogg_pag_id_univ_pag_codice_id_univoco_e, ''::character varying))::character varying(35) AS codice_identificativo_univoco_pagatore, (COALESCE(export_rendicontazione_tesoreria.cod_e_sogg_pag_anagrafica_pagatore_e, ''::character varying))::character varying(70) AS anagrafica_pagatore, (COALESCE(export_rendicontazione_tesoreria.de_e_sogg_pag_indirizzo_pagatore_e, ''::character varying))::character varying(70) AS indirizzo_pagatore, (COALESCE(export_rendicontazione_tesoreria.de_e_sogg_pag_civico_pagatore_e, ''::character varying))::character varying(16) AS civico_pagatore, (COALESCE(export_rendicontazione_tesoreria.cod_e_sogg_pag_cap_pagatore_e, ''::character varying))::character varying(16) AS cap_pagatore, (COALESCE(export_rendicontazione_tesoreria.de_e_sogg_pag_localita_pagatore_e, ''::character varying))::character varying(35) AS localita_pagatore, (COALESCE(export_rendicontazione_tesoreria.de_e_sogg_pag_provincia_pagatore_e, ''::character varying))::character varying(35) AS provincia_pagatore, (COALESCE(export_rendicontazione_tesoreria.cod_e_sogg_pag_nazione_pagatore_e, ''::character varying))::character varying(2) AS nazione_pagatore, (COALESCE(export_rendicontazione_tesoreria.de_e_sogg_pag_email_pagatore_e, ''::character varying))::character varying(256) AS email_pagatore, (COALESCE(export_rendicontazione_tesoreria.cod_e_dati_pag_codice_esito_pagamento_e, ''::bpchar))::character varying(1) AS codice_esito_pagamento, (COALESCE((export_rendicontazione_tesoreria.num_e_dati_pag_importo_totale_pagato_e)::character varying(15), ''::character varying))::character varying(15) AS importo_totale_pagato, (COALESCE(export_rendicontazione_tesoreria.cod_e_dati_pag_id_univoco_versamento_e, ''::character varying))::character varying(35) AS identificativo_univoco_versamento, (COALESCE(export_rendicontazione_tesoreria.cod_e_dati_pag_codice_contesto_pagamento_e, ''::character varying))::character varying(35) AS codice_contesto_pagamento, (COALESCE((export_rendicontazione_tesoreria.num_e_dati_pag_dati_sing_pag_singolo_importo_pagato_e)::character varying(15), (export_rendicontazione_tesoreria.num_dati_sing_pagam_singolo_importo_pagato_r)::character varying(15), ''::character varying))::character varying(15) AS singolo_importo_pagato, (COALESCE(export_rendicontazione_tesoreria.de_e_dati_pag_dati_sing_pag_esito_singolo_pagamento_e, export_rendicontazione_tesoreria.cod_dati_sing_pagam_codice_esito_singolo_pagamento_r, ''::character varying))::character varying(35) AS esito_singolo_pagamento, COALESCE(export_rendicontazione_tesoreria.dt_dati_sing_pagam_data_esito_singolo_pagamento_r, export_rendicontazione_tesoreria.dt_e_dati_pag_dati_sing_pag_data_esito_singolo_pagamento_e) AS dt_data_esito_singolo_pagamento, (COALESCE(to_char((COALESCE(export_rendicontazione_tesoreria.dt_dati_sing_pagam_data_esito_singolo_pagamento_r, export_rendicontazione_tesoreria.dt_e_dati_pag_dati_sing_pag_data_esito_singolo_pagamento_e))::timestamp with time zone, 'dd-MM-yyyy'::text), 'n/a'::text))::character varying(10) AS de_data_esito_singolo_pagamento, (COALESCE(export_rendicontazione_tesoreria.cod_e_dati_pag_dati_sing_pag_id_univoco_riscoss_e, export_rendicontazione_tesoreria.cod_dati_sing_pagam_identificativo_univoco_riscossione_r, 'n/a'::character varying))::character varying(35) AS identificativo_univoco_riscossione, (COALESCE(export_rendicontazione_tesoreria.de_e_dati_pag_dati_sing_pag_causale_versamento_e, ''::character varying))::character varying(140) AS causale_versamento, (COALESCE(export_rendicontazione_tesoreria.de_e_dati_pag_dati_sing_pag_dati_specifici_riscossione_e, ''::character varying))::character varying(140) AS dati_specifici_riscossione, (COALESCE(export_rendicontazione_tesoreria.cod_tipo_dovuto_e, ''::character varying))::character varying(64) AS tipo_dovuto, (COALESCE(export_rendicontazione_tesoreria.cod_identificativo_flusso_r, export_rendicontazione_tesoreria.cod_id_univoco_flusso_t, 'n/a'::character varying))::character varying(35) AS identificativo_flusso_rendicontazione, (COALESCE(to_char(export_rendicontazione_tesoreria.dt_data_ora_flusso_r, 'dd-MM-yyyy HH:mm:ss'::text), 'n/a'::text))::character varying(19) AS data_ora_flusso_rendicontazione, (COALESCE(export_rendicontazione_tesoreria.cod_identificativo_univoco_regolamento_r, 'n/a'::character varying))::character varying(35) AS identificativo_univoco_regolamento, COALESCE(export_rendicontazione_tesoreria.dt_data_regolamento_r, (export_rendicontazione_tesoreria.dt_e_dati_pag_dati_sing_pag_data_esito_singolo_pagamento_e + ente.num_giorni_pagamento_presunti)) AS dt_data_regolamento, COALESCE((to_char((COALESCE(export_rendicontazione_tesoreria.dt_data_regolamento_r, (export_rendicontazione_tesoreria.dt_e_dati_pag_dati_sing_pag_data_esito_singolo_pagamento_e + ente.num_giorni_pagamento_presunti)))::timestamp with time zone, 'dd-MM-yyyy'::text))::character varying(10), 'n/a'::character varying) AS de_data_regolamento, (COALESCE((export_rendicontazione_tesoreria.num_numero_totale_pagamenti_r)::character varying(15), 'n/a'::character varying))::character varying(15) AS numero_totale_pagamenti, (COALESCE((export_rendicontazione_tesoreria.num_importo_totale_pagamenti_r)::character varying(15), 'n/a'::character varying))::character varying(21) AS importo_totale_pagamenti, (to_char((GREATEST(export_rendicontazione_tesoreria.dt_acquisizione_r, export_rendicontazione_tesoreria.dt_acquisizione_e, export_rendicontazione_tesoreria.dt_acquisizione_t))::timestamp with time zone, 'dd-MM-yyyy'::text))::character varying(10) AS data_acquisizione, (COALESCE(export_rendicontazione_tesoreria.cod_conto_t, (''::character varying)::bpchar))::character varying(12) AS cod_conto, export_rendicontazione_tesoreria.dt_data_contabile_t AS dt_data_contabile, (COALESCE(to_char((export_rendicontazione_tesoreria.dt_data_contabile_t)::timestamp with time zone, 'dd-MM-yyyy'::text), (''::character varying)::text))::character varying(10) AS de_data_contabile, export_rendicontazione_tesoreria.dt_data_valuta_t AS dt_data_valuta, (COALESCE(to_char((export_rendicontazione_tesoreria.dt_data_valuta_t)::timestamp with time zone, 'dd-MM-yyyy'::text), (''::character varying)::text))::character varying(10) AS de_data_valuta, export_rendicontazione_tesoreria.num_importo_t AS num_importo, (COALESCE((export_rendicontazione_tesoreria.num_importo_t)::character(15), ('n/a'::character varying)::bpchar))::character varying(15) AS de_importo, COALESCE(export_rendicontazione_tesoreria.cod_or1_t, ''::text) AS cod_or1, CASE WHEN ((((sum(export_rendicontazione_tesoreria.num_dati_sing_pagam_singolo_importo_pagato_r) OVER (PARTITION BY export_rendicontazione_tesoreria.cod_identificativo_flusso_r) - export_rendicontazione_tesoreria.num_importo_totale_pagamenti_r) = (0)::numeric) AND (export_rendicontazione_tesoreria.num_e_dati_pag_importo_totale_pagato_e = export_rendicontazione_tesoreria.num_dati_sing_pagam_singolo_importo_pagato_r)) AND (export_rendicontazione_tesoreria.num_importo_totale_pagamenti_r = export_rendicontazione_tesoreria.num_importo_t)) THEN 'OK'::character varying(3) WHEN ((((sum(export_rendicontazione_tesoreria.num_dati_sing_pagam_singolo_importo_pagato_r) OVER (PARTITION BY export_rendicontazione_tesoreria.cod_identificativo_flusso_r) - export_rendicontazione_tesoreria.num_importo_totale_pagamenti_r) <> (0)::numeric) OR (export_rendicontazione_tesoreria.num_e_dati_pag_importo_totale_pagato_e <> export_rendicontazione_tesoreria.num_dati_sing_pagam_singolo_importo_pagato_r)) OR (export_rendicontazione_tesoreria.num_importo_totale_pagamenti_r <> export_rendicontazione_tesoreria.num_importo_t)) THEN 'KO'::character varying(3) ELSE 'n/a'::character varying(3) END AS verifica_totale, (COALESCE(export_rendicontazione_tesoreria.classificazione_completezza, 'OTHERS'::character varying))::character varying(20) AS classificazione_completezza FROM mygov_export_rendicontazione_tesoreria_completa export_rendicontazione_tesoreria, mygov_ente ente WHERE (COALESCE(export_rendicontazione_tesoreria.mygov_ente_id_e, export_rendicontazione_tesoreria.mygov_ente_id_r, export_rendicontazione_tesoreria.mygov_ente_id_t) = ente.mygov_ente_id);



CREATE VIEW v_mygov_import_export_rendicontazione_tesoreria AS
SELECT ente.cod_ipa_ente AS codice_ipa_ente, import_export_rendicontazione_tesoreria.dt_rp_dati_vers_data_esecuzione_pagamento_i AS dt_data_esecuzione_pagamento, (COALESCE(to_char((import_export_rendicontazione_tesoreria.dt_rp_dati_vers_data_esecuzione_pagamento_i)::timestamp with time zone, 'dd-MM-yyyy'::text), 'n/a'::text))::character varying(10) AS de_data_esecuzione_pagamento, (COALESCE((import_export_rendicontazione_tesoreria.num_rp_dati_vers_dati_sing_vers_commissione_carico_pa_i)::character varying(15), ''::character varying))::character varying(15) AS singolo_importo_commissione_carico_pa, (COALESCE(import_export_rendicontazione_tesoreria.bilancio_i, ''::character varying))::character varying(4096) AS bilancio, (COALESCE(import_export_rendicontazione_tesoreria.de_nome_flusso_e, 'n/a'::character varying))::character varying(50) AS nome_flusso_import_ente, (COALESCE((import_export_rendicontazione_tesoreria.num_riga_flusso_e)::character varying(12), 'n/a'::character varying))::character varying(12) AS riga_flusso_import_ente, (COALESCE(import_export_rendicontazione_tesoreria.cod_iud_i, import_export_rendicontazione_tesoreria.cod_iud_e, 'n/a'::character varying))::character varying(35) AS codice_iud, (COALESCE(import_export_rendicontazione_tesoreria.cod_rp_silinviarp_id_univoco_versamento_i, import_export_rendicontazione_tesoreria.cod_rp_silinviarp_id_univoco_versamento_e, import_export_rendicontazione_tesoreria.cod_dati_sing_pagam_identificativo_univoco_versamento_r, import_export_rendicontazione_tesoreria.cod_id_univoco_versamento_t, 'n/a'::character varying))::character varying(35) AS codice_iuv, (COALESCE(import_export_rendicontazione_tesoreria.de_e_versione_oggetto_e, ''::character varying))::character varying(16) AS versione_oggetto, (COALESCE(import_export_rendicontazione_tesoreria.cod_e_dom_id_dominio_e, ''::character varying))::character varying(35) AS identificativo_dominio, (COALESCE(import_export_rendicontazione_tesoreria.cod_e_dom_id_stazione_richiedente_e, ''::character varying))::character varying(35) AS identificativo_stazione_richiedente, (COALESCE(import_export_rendicontazione_tesoreria.cod_e_id_messaggio_ricevuta_e, ''::character varying))::character varying(35) AS identificativo_messaggio_ricevuta, (COALESCE(to_char(import_export_rendicontazione_tesoreria.dt_e_data_ora_messaggio_ricevuta_e, 'dd-MM-yyyy HH:mm:ss'::text), ''::text))::character varying(19) AS data_ora_messaggio_ricevuta, (COALESCE(import_export_rendicontazione_tesoreria.cod_e_riferimento_messaggio_richiesta_e, ''::character varying))::character varying(35) AS riferimento_messaggio_richiesta, (COALESCE(to_char((import_export_rendicontazione_tesoreria.dt_e_riferimento_data_richiesta_e)::timestamp with time zone, 'dd-MM-yyyy'::text), ''::text))::character varying(10) AS riferimento_data_richiesta, (COALESCE(import_export_rendicontazione_tesoreria.cod_e_istit_att_id_univ_att_tipo_id_univoco_e, ''::bpchar))::character varying(1) AS tipo_identificativo_univoco_attestante, (COALESCE(import_export_rendicontazione_tesoreria.cod_e_istit_att_id_univ_att_codice_id_univoco_e, ''::character varying))::character varying(35) AS codice_identificativo_univoco_attestante, (COALESCE(import_export_rendicontazione_tesoreria.de_e_istit_att_denominazione_attestante_e, ''::character varying))::character varying(70) AS denominazione_attestante, (COALESCE(import_export_rendicontazione_tesoreria.cod_e_istit_att_codice_unit_oper_attestante_e, ''::character varying))::character varying(35) AS codice_unit_oper_attestante, (COALESCE(import_export_rendicontazione_tesoreria.de_e_istit_att_denom_unit_oper_attestante_e, ''::character varying))::character varying(70) AS denom_unit_oper_attestante, (COALESCE(import_export_rendicontazione_tesoreria.de_e_istit_att_indirizzo_attestante_e, ''::character varying))::character varying(70) AS indirizzo_attestante, (COALESCE(import_export_rendicontazione_tesoreria.de_e_istit_att_civico_attestante_e, ''::character varying))::character varying(16) AS civico_attestante, (COALESCE(import_export_rendicontazione_tesoreria.cod_e_istit_att_cap_attestante_e, ''::character varying))::character varying(16) AS cap_attestante, (COALESCE(import_export_rendicontazione_tesoreria.de_e_istit_att_localita_attestante_e, ''::character varying))::character varying(35) AS localita_attestante, (COALESCE(import_export_rendicontazione_tesoreria.de_e_istit_att_provincia_attestante_e, ''::character varying))::character varying(35) AS provincia_attestante, (COALESCE(import_export_rendicontazione_tesoreria.cod_e_istit_att_nazione_attestante_e, ''::character varying))::character varying(2) AS nazione_attestante, (COALESCE(import_export_rendicontazione_tesoreria.cod_e_ente_benef_id_univ_benef_tipo_id_univoco_e, ''::bpchar))::character varying(1) AS tipo_identificativo_univoco_beneficiario, (COALESCE(import_export_rendicontazione_tesoreria.cod_e_ente_benef_id_univ_benef_codice_id_univoco_e, ''::character varying))::character varying(35) AS codice_identificativo_univoco_beneficiario, (COALESCE(import_export_rendicontazione_tesoreria.de_e_ente_benef_denominazione_beneficiario_e, ''::character varying))::character varying(70) AS denominazione_beneficiario, (COALESCE(import_export_rendicontazione_tesoreria.cod_e_ente_benef_codice_unit_oper_beneficiario_e, ''::character varying))::character varying(35) AS codice_unit_oper_beneficiario, (COALESCE(import_export_rendicontazione_tesoreria.de_e_ente_benef_denom_unit_oper_beneficiario_e, ''::character varying))::character varying(70) AS denom_unit_oper_beneficiario, (COALESCE(import_export_rendicontazione_tesoreria.de_e_ente_benef_indirizzo_beneficiario_e, ''::character varying))::character varying(70) AS indirizzo_beneficiario, (COALESCE(import_export_rendicontazione_tesoreria.de_e_ente_benef_civico_beneficiario_e, ''::character varying))::character varying(16) AS civico_beneficiario, (COALESCE(import_export_rendicontazione_tesoreria.cod_e_ente_benef_cap_beneficiario_e, ''::character varying))::character varying(16) AS cap_beneficiario, (COALESCE(import_export_rendicontazione_tesoreria.de_e_ente_benef_localita_beneficiario_e, ''::character varying))::character varying(35) AS localita_beneficiario, (COALESCE(import_export_rendicontazione_tesoreria.de_e_ente_benef_provincia_beneficiario_e, ''::character varying))::character varying(2) AS provincia_beneficiario, (COALESCE(import_export_rendicontazione_tesoreria.cod_e_ente_benef_nazione_beneficiario_e, ''::character varying))::character varying(2) AS nazione_beneficiario, (COALESCE(import_export_rendicontazione_tesoreria.cod_e_sogg_vers_id_univ_vers_tipo_id_univoco_e, ''::bpchar))::character varying(1) AS tipo_identificativo_univoco_versante, (COALESCE(import_export_rendicontazione_tesoreria.cod_e_sogg_vers_id_univ_vers_codice_id_univoco_e, ''::character varying))::character varying(35) AS codice_identificativo_univoco_versante, (COALESCE(import_export_rendicontazione_tesoreria.cod_e_sogg_vers_anagrafica_versante_e, ''::character varying))::character varying(70) AS anagrafica_versante, (COALESCE(import_export_rendicontazione_tesoreria.de_e_sogg_vers_indirizzo_versante_e, ''::character varying))::character varying(70) AS indirizzo_versante, (COALESCE(import_export_rendicontazione_tesoreria.de_e_sogg_vers_civico_versante_e, ''::character varying))::character varying(16) AS civico_versante, (COALESCE(import_export_rendicontazione_tesoreria.cod_e_sogg_vers_cap_versante_e, ''::character varying))::character varying(16) AS cap_versante, (COALESCE(import_export_rendicontazione_tesoreria.de_e_sogg_vers_localita_versante_e, ''::character varying))::character varying(35) AS localita_versante, (COALESCE(import_export_rendicontazione_tesoreria.de_e_sogg_vers_provincia_versante_e, ''::character varying))::character varying(35) AS provincia_versante, (COALESCE(import_export_rendicontazione_tesoreria.cod_e_sogg_vers_nazione_versante_e, ''::character varying))::character varying(2) AS nazione_versante, (COALESCE(import_export_rendicontazione_tesoreria.de_e_sogg_vers_email_versante_e, ''::character varying))::character varying(256) AS email_versante, (COALESCE(import_export_rendicontazione_tesoreria.cod_rp_sogg_pag_id_univ_pag_tipo_id_univoco_i, import_export_rendicontazione_tesoreria.cod_e_sogg_pag_id_univ_pag_tipo_id_univoco_e, ''::bpchar))::character varying(1) AS tipo_identificativo_univoco_pagatore, (COALESCE(import_export_rendicontazione_tesoreria.cod_rp_sogg_pag_id_univ_pag_codice_id_univoco_i, import_export_rendicontazione_tesoreria.cod_e_sogg_pag_id_univ_pag_codice_id_univoco_e, ''::character varying))::character varying(35) AS codice_identificativo_univoco_pagatore, (COALESCE(import_export_rendicontazione_tesoreria.de_rp_sogg_pag_anagrafica_pagatore_i, import_export_rendicontazione_tesoreria.cod_e_sogg_pag_anagrafica_pagatore_e, ''::character varying))::character varying(70) AS anagrafica_pagatore, (COALESCE(import_export_rendicontazione_tesoreria.de_rp_sogg_pag_indirizzo_pagatore_i, import_export_rendicontazione_tesoreria.de_e_sogg_pag_indirizzo_pagatore_e, ''::character varying))::character varying(70) AS indirizzo_pagatore, (COALESCE(import_export_rendicontazione_tesoreria.de_rp_sogg_pag_civico_pagatore_i, import_export_rendicontazione_tesoreria.de_e_sogg_pag_civico_pagatore_e, ''::character varying))::character varying(16) AS civico_pagatore, (COALESCE(import_export_rendicontazione_tesoreria.cod_rp_sogg_pag_cap_pagatore_i, import_export_rendicontazione_tesoreria.cod_e_sogg_pag_cap_pagatore_e, ''::character varying))::character varying(16) AS cap_pagatore, (COALESCE(import_export_rendicontazione_tesoreria.de_rp_sogg_pag_localita_pagatore_i, import_export_rendicontazione_tesoreria.de_e_sogg_pag_localita_pagatore_e, ''::character varying))::character varying(35) AS localita_pagatore, (COALESCE(import_export_rendicontazione_tesoreria.de_rp_sogg_pag_provincia_pagatore_i, import_export_rendicontazione_tesoreria.de_e_sogg_pag_provincia_pagatore_e, ''::character varying))::character varying(35) AS provincia_pagatore, (COALESCE(import_export_rendicontazione_tesoreria.cod_rp_sogg_pag_nazione_pagatore_i, import_export_rendicontazione_tesoreria.cod_e_sogg_pag_nazione_pagatore_e, ''::character varying))::character varying(2) AS nazione_pagatore, (COALESCE(import_export_rendicontazione_tesoreria.de_rp_sogg_pag_email_pagatore_i, import_export_rendicontazione_tesoreria.de_e_sogg_pag_email_pagatore_e, ''::character varying))::character varying(256) AS email_pagatore, (COALESCE(import_export_rendicontazione_tesoreria.cod_e_dati_pag_codice_esito_pagamento_e, ''::bpchar))::character varying(1) AS codice_esito_pagamento, (COALESCE((import_export_rendicontazione_tesoreria.num_e_dati_pag_importo_totale_pagato_e)::character varying(15), ''::character varying))::character varying(15) AS importo_totale_pagato, (COALESCE(import_export_rendicontazione_tesoreria.cod_e_dati_pag_id_univoco_versamento_e, ''::character varying))::character varying(35) AS identificativo_univoco_versamento, (COALESCE(import_export_rendicontazione_tesoreria.cod_e_dati_pag_codice_contesto_pagamento_e, ''::character varying))::character varying(35) AS codice_contesto_pagamento, (COALESCE((import_export_rendicontazione_tesoreria.num_rp_dati_vers_dati_sing_vers_importo_singolo_versamento_i)::character varying(15), (import_export_rendicontazione_tesoreria.num_e_dati_pag_dati_sing_pag_singolo_importo_pagato_e)::character varying(15), (import_export_rendicontazione_tesoreria.num_dati_sing_pagam_singolo_importo_pagato_r)::character varying(15), ''::character varying))::character varying(15) AS singolo_importo_pagato, (COALESCE(import_export_rendicontazione_tesoreria.de_e_dati_pag_dati_sing_pag_esito_singolo_pagamento_e, import_export_rendicontazione_tesoreria.cod_dati_sing_pagam_codice_esito_singolo_pagamento_r, ''::character varying))::character varying(35) AS esito_singolo_pagamento, COALESCE(import_export_rendicontazione_tesoreria.dt_dati_sing_pagam_data_esito_singolo_pagamento_r, import_export_rendicontazione_tesoreria.dt_e_dati_pag_dati_sing_pag_data_esito_singolo_pagamento_e) AS dt_data_esito_singolo_pagamento, (COALESCE(to_char((COALESCE(import_export_rendicontazione_tesoreria.dt_dati_sing_pagam_data_esito_singolo_pagamento_r, import_export_rendicontazione_tesoreria.dt_e_dati_pag_dati_sing_pag_data_esito_singolo_pagamento_e))::timestamp with time zone, 'dd-MM-yyyy'::text), 'n/a'::text))::character varying(10) AS de_data_esito_singolo_pagamento, (COALESCE(import_export_rendicontazione_tesoreria.cod_e_dati_pag_dati_sing_pag_id_univoco_riscoss_e, import_export_rendicontazione_tesoreria.cod_dati_sing_pagam_identificativo_univoco_riscossione_r, 'n/a'::character varying))::character varying(35) AS identificativo_univoco_riscossione, (COALESCE(import_export_rendicontazione_tesoreria.de_rp_dati_vers_dati_sing_vers_causale_versamento_i, import_export_rendicontazione_tesoreria.de_e_dati_pag_dati_sing_pag_causale_versamento_e, ''::character varying))::character varying(140) AS causale_versamento, (COALESCE(import_export_rendicontazione_tesoreria.de_rp_dati_vers_dati_sing_vers_dati_specifici_riscossione_i, import_export_rendicontazione_tesoreria.de_e_dati_pag_dati_sing_pag_dati_specifici_riscossione_e, ''::character varying))::character varying(140) AS dati_specifici_riscossione, (COALESCE(import_export_rendicontazione_tesoreria.cod_tipo_dovuto_i, import_export_rendicontazione_tesoreria.cod_tipo_dovuto_e, ''::character varying))::character varying(64) AS tipo_dovuto, (COALESCE(import_export_rendicontazione_tesoreria.cod_identificativo_flusso_r, import_export_rendicontazione_tesoreria.cod_id_univoco_flusso_t, 'n/a'::character varying))::character varying(35) AS identificativo_flusso_rendicontazione, (COALESCE(to_char(import_export_rendicontazione_tesoreria.dt_data_ora_flusso_r, 'dd-MM-yyyy HH:mm:ss'::text), 'n/a'::text))::character varying(19) AS data_ora_flusso_rendicontazione, (COALESCE(import_export_rendicontazione_tesoreria.cod_identificativo_univoco_regolamento_r, 'n/a'::character varying))::character varying(35) AS identificativo_univoco_regolamento, COALESCE(import_export_rendicontazione_tesoreria.dt_data_regolamento_r, (import_export_rendicontazione_tesoreria.dt_e_dati_pag_dati_sing_pag_data_esito_singolo_pagamento_e + ente.num_giorni_pagamento_presunti)) AS dt_data_regolamento, COALESCE((to_char((COALESCE(import_export_rendicontazione_tesoreria.dt_data_regolamento_r, (import_export_rendicontazione_tesoreria.dt_e_dati_pag_dati_sing_pag_data_esito_singolo_pagamento_e + ente.num_giorni_pagamento_presunti)))::timestamp with time zone, 'dd-MM-yyyy'::text))::character varying(10), 'n/a'::character varying) AS de_data_regolamento, (COALESCE((import_export_rendicontazione_tesoreria.num_numero_totale_pagamenti_r)::character varying(15), 'n/a'::character varying))::character varying(15) AS numero_totale_pagamenti, (COALESCE((import_export_rendicontazione_tesoreria.num_importo_totale_pagamenti_r)::character varying(15), 'n/a'::character varying))::character varying(21) AS importo_totale_pagamenti, (to_char((GREATEST(import_export_rendicontazione_tesoreria.dt_acquisizione_r, import_export_rendicontazione_tesoreria.dt_acquisizione_e, import_export_rendicontazione_tesoreria.dt_acquisizione_t))::timestamp with time zone, 'dd-MM-yyyy'::text))::character varying(10) AS data_acquisizione, (COALESCE(import_export_rendicontazione_tesoreria.cod_conto_t, (''::character varying)::bpchar))::character varying(12) AS cod_conto, import_export_rendicontazione_tesoreria.dt_data_contabile_t AS dt_data_contabile, (COALESCE(to_char((import_export_rendicontazione_tesoreria.dt_data_contabile_t)::timestamp with time zone, 'dd-MM-yyyy'::text), (''::character varying)::text))::character varying(10) AS de_data_contabile, import_export_rendicontazione_tesoreria.dt_data_valuta_t AS dt_data_valuta, (COALESCE(to_char((import_export_rendicontazione_tesoreria.dt_data_valuta_t)::timestamp with time zone, 'dd-MM-yyyy'::text), (''::character varying)::text))::character varying(10) AS de_data_valuta, import_export_rendicontazione_tesoreria.num_importo_t AS num_importo, (COALESCE((import_export_rendicontazione_tesoreria.num_importo_t)::character(15), ('n/a'::character varying)::bpchar))::character varying(15) AS de_importo, COALESCE(import_export_rendicontazione_tesoreria.cod_or1_t, ''::text) AS cod_or1, CASE WHEN ((import_export_rendicontazione_tesoreria.num_rp_dati_vers_dati_sing_vers_importo_singolo_versamento_i = import_export_rendicontazione_tesoreria.num_e_dati_pag_importo_totale_pagato_e) OR ((((sum(import_export_rendicontazione_tesoreria.num_dati_sing_pagam_singolo_importo_pagato_r) OVER (PARTITION BY import_export_rendicontazione_tesoreria.cod_identificativo_flusso_r) - import_export_rendicontazione_tesoreria.num_importo_totale_pagamenti_r) = (0)::numeric) AND (import_export_rendicontazione_tesoreria.num_e_dati_pag_importo_totale_pagato_e = import_export_rendicontazione_tesoreria.num_dati_sing_pagam_singolo_importo_pagato_r)) AND (import_export_rendicontazione_tesoreria.num_importo_totale_pagamenti_r = import_export_rendicontazione_tesoreria.num_importo_t))) THEN 'OK'::character varying(3) WHEN ((((import_export_rendicontazione_tesoreria.num_rp_dati_vers_dati_sing_vers_importo_singolo_versamento_i <> import_export_rendicontazione_tesoreria.num_e_dati_pag_importo_totale_pagato_e) OR ((sum(import_export_rendicontazione_tesoreria.num_dati_sing_pagam_singolo_importo_pagato_r) OVER (PARTITION BY import_export_rendicontazione_tesoreria.cod_identificativo_flusso_r) - import_export_rendicontazione_tesoreria.num_importo_totale_pagamenti_r) <> (0)::numeric)) OR (import_export_rendicontazione_tesoreria.num_e_dati_pag_importo_totale_pagato_e <> import_export_rendicontazione_tesoreria.num_dati_sing_pagam_singolo_importo_pagato_r)) OR (import_export_rendicontazione_tesoreria.num_importo_totale_pagamenti_r <> import_export_rendicontazione_tesoreria.num_importo_t)) THEN 'KO'::character varying(3) ELSE 'n/a'::character varying(3) END AS verifica_totale, (COALESCE(import_export_rendicontazione_tesoreria.classificazione_completezza, 'OTHERS'::character varying))::character varying(20) AS classificazione_completezza FROM mygov_import_export_rendicontazione_tesoreria_completa import_export_rendicontazione_tesoreria, mygov_ente ente WHERE (COALESCE(import_export_rendicontazione_tesoreria.mygov_ente_id_i, import_export_rendicontazione_tesoreria.mygov_ente_id_e, import_export_rendicontazione_tesoreria.mygov_ente_id_r, import_export_rendicontazione_tesoreria.mygov_ente_id_t) = ente.mygov_ente_id);

ALTER TABLE mygov_classificazione_completezza
	ADD CONSTRAINT mygov_classificazione_completezza_pkey PRIMARY KEY (mygov_classificazione_codice);

ALTER TABLE mygov_flusso_import
	ADD CONSTRAINT mygov_flusso_import_pkey PRIMARY KEY (mygov_ente_id, cod_iud);

ALTER TABLE mygov_flusso_import
	ADD CONSTRAINT mygov_flusso_import_mygov_ente_id_fkey FOREIGN KEY (mygov_ente_id) REFERENCES mygov_ente(mygov_ente_id) ON DELETE CASCADE;

ALTER TABLE mygov_flusso_import
	ADD CONSTRAINT mygov_flusso_import_mygov_manage_flusso_id_fkey FOREIGN KEY (mygov_manage_flusso_id) REFERENCES mygov_manage_flusso(mygov_manage_flusso_id) ON DELETE CASCADE;

CREATE INDEX idx_mygovimpexprendtes_causale_versamento ON mygov_import_export_rendicontazione_tesoreria USING btree (codice_ipa_ente, causale_versamento);

CREATE INDEX idx_mygovimpexprendtes_classificazione_completezza ON mygov_import_export_rendicontazione_tesoreria USING btree (codice_ipa_ente, classificazione_completezza);

CREATE INDEX idx_mygovimpexprendtes_codice_iud ON mygov_import_export_rendicontazione_tesoreria USING btree (codice_ipa_ente, codice_iud);

CREATE INDEX idx_mygovimpexprendtes_de_importo ON mygov_import_export_rendicontazione_tesoreria USING btree (codice_ipa_ente, de_importo);

CREATE INDEX idx_mygovimpexprendtes_dt_data_contabile ON mygov_import_export_rendicontazione_tesoreria USING btree (codice_ipa_ente, dt_data_contabile);

CREATE INDEX idx_mygovimpexprendtes_dt_data_esito_singolo_pagamento ON mygov_import_export_rendicontazione_tesoreria USING btree (codice_ipa_ente, dt_data_esito_singolo_pagamento);

CREATE INDEX idx_mygovimpexprendtes_dt_data_regolamento ON mygov_import_export_rendicontazione_tesoreria USING btree (codice_ipa_ente, dt_data_regolamento);

CREATE INDEX idx_mygovimpexprendtes_dt_data_valuta ON mygov_import_export_rendicontazione_tesoreria USING btree (codice_ipa_ente, dt_data_valuta);

CREATE INDEX idx_mygovimpexprendtes_identificativo_flusso_rendicontazione ON mygov_import_export_rendicontazione_tesoreria USING btree (codice_ipa_ente, identificativo_flusso_rendicontazione);

CREATE INDEX idx_mygovimpexprendtes_identificativo_univoco_regolamento ON mygov_import_export_rendicontazione_tesoreria USING btree (codice_ipa_ente, identificativo_univoco_regolamento);

CREATE INDEX idx_mygovimpexprendtes_identificativo_univoco_riscossione ON mygov_import_export_rendicontazione_tesoreria USING btree (codice_ipa_ente, identificativo_univoco_riscossione);

CREATE INDEX idx_mygovimpexprendtes_identificativo_univoco_versamento ON mygov_import_export_rendicontazione_tesoreria USING btree (codice_ipa_ente, identificativo_univoco_versamento);

CREATE INDEX idx_mygovimpexprendtes_importo_totale_pagamenti ON mygov_import_export_rendicontazione_tesoreria USING btree (codice_ipa_ente, importo_totale_pagamenti);

CREATE INDEX idx_mygovimpexprendtes_tipo_dovuto ON mygov_import_export_rendicontazione_tesoreria USING btree (codice_ipa_ente, tipo_dovuto);

ALTER TABLE ONLY mygov_ente_prenotazione DROP CONSTRAINT mygov_ente_prenotazione_mygov_ente_id_fkey;
ALTER TABLE ONLY mygov_ente_prenotazione
    ADD CONSTRAINT mygov_ente_prenotazione_mygov_ente_id_fkey FOREIGN KEY (mygov_ente_id) REFERENCES mygov_ente(mygov_ente_id) ON DELETE CASCADE;
ALTER TABLE ONLY mygov_ente_tipo_dovuto DROP CONSTRAINT mygov_ente_tipo_dovuto_mygov_ente_fkey;
ALTER TABLE ONLY mygov_ente_tipo_dovuto
    ADD CONSTRAINT mygov_ente_tipo_dovuto_mygov_ente_fkey FOREIGN KEY (mygov_ente_id) REFERENCES mygov_ente(mygov_ente_id) ON DELETE CASCADE;

ALTER TABLE ONLY mygov_entepsp_flusso_rendicontazione DROP CONSTRAINT mygov_entepsp_flusso_rendicontazione_mygov_entepsp_id_fkey;
ALTER TABLE ONLY mygov_entepsp_flusso_rendicontazione
    ADD CONSTRAINT mygov_entepsp_flusso_rendicontazione_mygov_entepsp_id_fkey FOREIGN KEY (mygov_entepsp_id) REFERENCES mygov_entepsp(mygov_entepsp_id) ON DELETE CASCADE;
ALTER TABLE ONLY mygov_entepsp DROP CONSTRAINT mygov_entepsp_mygov_ente_id_fkey;
ALTER TABLE ONLY mygov_entepsp
    ADD CONSTRAINT mygov_entepsp_mygov_ente_id_fkey FOREIGN KEY (mygov_ente_id) REFERENCES mygov_ente(mygov_ente_id) ON DELETE CASCADE;

ALTER TABLE ONLY mygov_flusso_export DROP CONSTRAINT mygov_flusso_export_mygov_ente_id_fkey;
ALTER TABLE ONLY mygov_flusso_export
    ADD CONSTRAINT mygov_flusso_export_mygov_ente_id_fkey FOREIGN KEY (mygov_ente_id) REFERENCES mygov_ente(mygov_ente_id) ON DELETE CASCADE;
ALTER TABLE ONLY mygov_flusso_export DROP CONSTRAINT mygov_flusso_export_mygov_manage_flusso_id_fkey;
ALTER TABLE ONLY mygov_flusso_export
    ADD CONSTRAINT mygov_flusso_export_mygov_manage_flusso_id_fkey FOREIGN KEY (mygov_manage_flusso_id) REFERENCES mygov_manage_flusso(mygov_manage_flusso_id) ON DELETE CASCADE;

ALTER TABLE ONLY mygov_flusso_rendicontazione DROP CONSTRAINT mygov_flusso_rendicontazione_mygov_ente_id_fkey;
ALTER TABLE ONLY mygov_flusso_rendicontazione
    ADD CONSTRAINT mygov_flusso_rendicontazione_mygov_ente_id_fkey FOREIGN KEY (mygov_ente_id) REFERENCES mygov_ente(mygov_ente_id) ON DELETE CASCADE;
ALTER TABLE ONLY mygov_flusso_rendicontazione DROP CONSTRAINT mygov_flusso_rendicontazione_mygov_manage_flusso_id_fkey;
ALTER TABLE ONLY mygov_flusso_rendicontazione
    ADD CONSTRAINT mygov_flusso_rendicontazione_mygov_manage_flusso_id_fkey FOREIGN KEY (mygov_manage_flusso_id) REFERENCES mygov_manage_flusso(mygov_manage_flusso_id) ON DELETE CASCADE;

ALTER TABLE ONLY mygov_flusso_tesoreria_iuf DROP CONSTRAINT mygov_flusso_tesoreria_iuf_mygov_ente_id_fkey;
ALTER TABLE ONLY mygov_flusso_tesoreria_iuf
    ADD CONSTRAINT mygov_flusso_tesoreria_iuf_mygov_ente_id_fkey FOREIGN KEY (mygov_ente_id) REFERENCES mygov_ente(mygov_ente_id) ON DELETE CASCADE;
ALTER TABLE ONLY mygov_flusso_tesoreria_iuf DROP CONSTRAINT mygov_flusso_tesoreria_iuf_mygov_manage_flusso_id_fkey;
ALTER TABLE ONLY mygov_flusso_tesoreria_iuf
    ADD CONSTRAINT mygov_flusso_tesoreria_iuf_mygov_manage_flusso_id_fkey FOREIGN KEY (mygov_manage_flusso_id) REFERENCES mygov_manage_flusso(mygov_manage_flusso_id) ON DELETE CASCADE;

ALTER TABLE ONLY mygov_info_flusso_poste_web DROP CONSTRAINT mygov_info_flusso_poste_web_mygov_manage_flusso_id_fkey;
ALTER TABLE ONLY mygov_info_flusso_poste_web
    ADD CONSTRAINT mygov_info_flusso_poste_web_mygov_manage_flusso_id_fkey FOREIGN KEY (mygov_manage_flusso_id) REFERENCES mygov_manage_flusso(mygov_manage_flusso_id) ON DELETE CASCADE;
ALTER TABLE ONLY mygov_manage_flusso DROP CONSTRAINT mygov_manage_flusso_mygov_ente_fkey;
ALTER TABLE ONLY mygov_manage_flusso
    ADD CONSTRAINT mygov_manage_flusso_mygov_ente_fkey FOREIGN KEY (mygov_ente_id) REFERENCES mygov_ente(mygov_ente_id) ON DELETE CASCADE;
ALTER TABLE ONLY mygov_prenotazione_flusso_rendicontazione DROP CONSTRAINT mygov_prenotazione_flusso_rendicontazione_mygov_entepsp_id_fkey;
ALTER TABLE ONLY mygov_prenotazione_flusso_rendicontazione
    ADD CONSTRAINT mygov_prenotazione_flusso_rendicontazione_mygov_entepsp_id_fkey FOREIGN KEY (mygov_entepsp_id) REFERENCES mygov_entepsp(mygov_entepsp_id) ON DELETE CASCADE;


-- 5.1.4.1

DROP FUNCTION inserisci_richiesta_ente(bigint);

CREATE OR REPLACE FUNCTION inserisci_richiesta_ente(mygov_ente_id_n bigint)
  RETURNS void AS
$BODY$

    DECLARE
	id_lock 		bigint; 
	pren_recup_cursor	CURSOR FOR 
				 SELECT pren.*
				   FROM mygov_ente_prenotazione pren
				       ,mygov_anagrafica_stato stato        
				  WHERE pren.mygov_anagrafica_stato_id = stato.mygov_anagrafica_stato_id
				   AND (stato.cod_stato = 'ERROR_CHIEDI_STATO_EXPORT' 
				    OR stato.cod_stato = 'ERROR_PRENOTAZIONE'
				    OR stato.cod_stato = 'ERRORE_DOWNLOAD'
				    OR stato.cod_stato = 'ERROR_LOAD')
				   AND stato.de_tipo_stato = 'FLUSSO_EXPORT'
				   AND pren.mygov_ente_id = mygov_ente_id_n 
				   AND pren.mygov_ente_prenotazione_id_rif IS NULL;

	pren_recup_record	mygov_ente_prenotazione%ROWTYPE;	
	new_id			bigint;
	pren_in_corso		bigint;
	max_date_to		timestamp without time zone;
	
    BEGIN

	/* ************  LOCK SU mygov_ente_id TABELLA mygov_ente  ********** */
	SELECT mygov_ente_id 
	  FROM mygov_ente 
	 WHERE mygov_ente_id = mygov_ente_id_n INTO id_lock FOR UPDATE; 
  	/* ******************************************************************* */ 

  	OPEN pren_recup_cursor;
  	LOOP
		FETCH pren_recup_cursor INTO pren_recup_record;
		EXIT WHEN NOT FOUND;
		
		SELECT nextval('mygov_ente_prenotazione_mygov_ente_prenotazione_id_seq') INTO new_id;

		INSERT INTO mygov_ente_prenotazione(
					    mygov_ente_prenotazione_id, "version", mygov_ente_id, mygov_anagrafica_stato_id, 
					    dt_prenota_date_from, dt_prenota_date_to, cod_prenota_identificativo_tipo_dovuto,  
					    dt_creazione, dt_ultima_modifica)
				    VALUES (new_id, 0, mygov_ente_id_n, 
				              (SELECT mygov_anagrafica_stato_id 
				                 FROM mygov_anagrafica_stato
				                WHERE cod_stato = 'INSERITO'
				                  AND de_tipo_stato = 'FLUSSO_EXPORT')
				            , pren_recup_record.dt_prenota_date_from, pren_recup_record.dt_prenota_date_to, 'ALL', 
					    current_timestamp, current_timestamp);

		UPDATE mygov_ente_prenotazione p
		   SET mygov_ente_prenotazione_id_rif = new_id
		 WHERE p.mygov_ente_prenotazione_id = pren_recup_record.mygov_ente_prenotazione_id;
  	END LOOP; 

  	SELECT count(1)
  	  INTO pren_in_corso
	  FROM mygov_ente_prenotazione pren
	      ,mygov_anagrafica_stato stato        
	 WHERE pren.mygov_anagrafica_stato_id = stato.mygov_anagrafica_stato_id
	   AND ((stato.cod_stato = 'INSERITO'
	  AND stato.de_tipo_stato = 'FLUSSO_EXPORT') OR
		(stato.cod_stato = 'IN_CARICO'
	  AND stato.de_tipo_stato = 'ALL'))	  
	  AND dt_prenota_date_to IS NULL
	  AND pren.mygov_ente_id = mygov_ente_id_n;

	IF pren_in_corso = 0 THEN

		SELECT max(pren.dt_prenota_date_to)
		  INTO max_date_to
		  FROM mygov_ente_prenotazione pren
		      ,mygov_anagrafica_stato stato        
		 WHERE pren.mygov_anagrafica_stato_id = stato.mygov_anagrafica_stato_id
		  AND (stato.cod_stato = 'INSERITO'
		   OR stato.cod_stato = 'PRENOTATO' 
		   OR stato.cod_stato = 'CHIEDI_STATO_EXPORT'
		   OR stato.cod_stato = 'CHIEDI_STATO_EXPORT_NO_FILE'
		   OR stato.cod_stato = 'ATTESA_PRODUZIONE_FILE'
		   OR stato.cod_stato = 'DOWNLOAD'
		   OR stato.cod_stato = 'LOAD')
		  AND stato.de_tipo_stato = 'FLUSSO_EXPORT'
		  AND pren.mygov_ente_id = mygov_ente_id_n;	
		  
		IF max_date_to IS NULL THEN
			INSERT INTO mygov_ente_prenotazione(
					    mygov_ente_prenotazione_id, "version", mygov_ente_id, mygov_anagrafica_stato_id, 
					    dt_prenota_date_from, cod_prenota_identificativo_tipo_dovuto,  
					    dt_creazione, dt_ultima_modifica)
				    VALUES (nextval('mygov_ente_prenotazione_mygov_ente_prenotazione_id_seq'), 0, mygov_ente_id_n, 
					      (SELECT mygov_anagrafica_stato_id 
						 FROM mygov_anagrafica_stato
						WHERE cod_stato = 'INSERITO'
						  AND de_tipo_stato = 'FLUSSO_EXPORT')
					    , '2014-01-01', 'ALL', 
					    current_timestamp, current_timestamp);
		ELSE 
			INSERT INTO mygov_ente_prenotazione(
					    mygov_ente_prenotazione_id, "version", mygov_ente_id, mygov_anagrafica_stato_id, 
					    dt_prenota_date_from, cod_prenota_identificativo_tipo_dovuto,  
					    dt_creazione, dt_ultima_modifica)
				    VALUES (nextval('mygov_ente_prenotazione_mygov_ente_prenotazione_id_seq'), 0, mygov_ente_id_n, 
					      (SELECT mygov_anagrafica_stato_id 
						 FROM mygov_anagrafica_stato
						WHERE cod_stato = 'INSERITO'
						  AND de_tipo_stato = 'FLUSSO_EXPORT')
					    , max_date_to, 'ALL', 
					    current_timestamp, current_timestamp);
		END IF;
	END IF;     

    END;
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;

-- 5.1.4.2
DROP FUNCTION inserisci_richiesta_ente(bigint);

CREATE OR REPLACE FUNCTION inserisci_richiesta_ente(mygov_ente_id_n bigint)
  RETURNS void AS
$BODY$

    DECLARE
	id_lock 		bigint; 
	pren_recup_cursor	CURSOR FOR 
				 SELECT pren.*
				   FROM mygov_ente_prenotazione pren
				       ,mygov_anagrafica_stato stato        
				  WHERE pren.mygov_anagrafica_stato_id = stato.mygov_anagrafica_stato_id
				   AND (stato.cod_stato = 'ERROR_CHIEDI_STATO_EXPORT' 
				    OR stato.cod_stato = 'ERROR_PRENOTAZIONE'
				    OR stato.cod_stato = 'ERRORE_DOWNLOAD'
				    OR stato.cod_stato = 'ERROR_LOAD')
				   AND stato.de_tipo_stato = 'FLUSSO_EXPORT'
				   AND pren.mygov_ente_id = mygov_ente_id_n 
				   AND pren.mygov_ente_prenotazione_id_rif IS NULL;

	pren_recup_record	mygov_ente_prenotazione%ROWTYPE;	
	new_id			bigint;
	pren_in_corso		bigint;
	max_date_to		timestamp without time zone;
	
    BEGIN

	/* ************  LOCK SU mygov_ente_id TABELLA mygov_ente  ********** */
	SELECT mygov_ente_id 
	  FROM mygov_ente 
	 WHERE mygov_ente_id = mygov_ente_id_n INTO id_lock FOR UPDATE; 
  	/* ******************************************************************* */ 

  	OPEN pren_recup_cursor;
  	LOOP
		FETCH pren_recup_cursor INTO pren_recup_record;
		EXIT WHEN NOT FOUND;
		
		SELECT nextval('mygov_ente_prenotazione_mygov_ente_prenotazione_id_seq') INTO new_id;

		INSERT INTO mygov_ente_prenotazione(
					    mygov_ente_prenotazione_id, "version", mygov_ente_id, mygov_anagrafica_stato_id, 
					    dt_prenota_date_from, dt_prenota_date_to, cod_prenota_identificativo_tipo_dovuto,  
					    dt_creazione, dt_ultima_modifica)
				    VALUES (new_id, 0, mygov_ente_id_n, 
				              (SELECT mygov_anagrafica_stato_id 
				                 FROM mygov_anagrafica_stato
				                WHERE cod_stato = 'INSERITO'
				                  AND de_tipo_stato = 'FLUSSO_EXPORT')
				            , pren_recup_record.dt_prenota_date_from, pren_recup_record.dt_prenota_date_to, 'ALL', 
					    current_timestamp, current_timestamp);

		UPDATE mygov_ente_prenotazione p
		   SET mygov_ente_prenotazione_id_rif = new_id
		 WHERE p.mygov_ente_prenotazione_id = pren_recup_record.mygov_ente_prenotazione_id;
  	END LOOP; 

  	SELECT count(1)
  	  INTO pren_in_corso
	  FROM mygov_ente_prenotazione pren
	      ,mygov_anagrafica_stato stato        
	 WHERE pren.mygov_anagrafica_stato_id = stato.mygov_anagrafica_stato_id
	   AND ((stato.cod_stato = 'INSERITO'
	  AND stato.de_tipo_stato = 'FLUSSO_EXPORT') OR
		(stato.cod_stato = 'IN_CARICO'
	  AND stato.de_tipo_stato = 'ALL'))	  
	  AND dt_prenota_date_to IS NULL
	  AND pren.mygov_ente_id = mygov_ente_id_n;

	IF pren_in_corso = 0 THEN

		SELECT max(pren.dt_prenota_date_to)
		  INTO max_date_to
		  FROM mygov_ente_prenotazione pren
		      ,mygov_anagrafica_stato stato        
		 WHERE pren.mygov_anagrafica_stato_id = stato.mygov_anagrafica_stato_id
		  AND pren.mygov_ente_id = mygov_ente_id_n
		  AND (((stato.cod_stato = 'INSERITO'
		   OR stato.cod_stato = 'PRENOTATO' 
		   OR stato.cod_stato = 'CHIEDI_STATO_EXPORT'
		   OR stato.cod_stato = 'CHIEDI_STATO_EXPORT_NO_FILE'
		   OR stato.cod_stato = 'ATTESA_PRODUZIONE_FILE'
		   OR stato.cod_stato = 'DOWNLOAD'
		   OR stato.cod_stato = 'LOAD')
		  AND stato.de_tipo_stato = 'FLUSSO_EXPORT')	 
		  OR (stato.cod_stato = 'IN_CARICO'
	          AND stato.de_tipo_stato = 'ALL'));	  
		  
		IF max_date_to IS NULL THEN
			INSERT INTO mygov_ente_prenotazione(
					    mygov_ente_prenotazione_id, "version", mygov_ente_id, mygov_anagrafica_stato_id, 
					    dt_prenota_date_from, cod_prenota_identificativo_tipo_dovuto,  
					    dt_creazione, dt_ultima_modifica)
				    VALUES (nextval('mygov_ente_prenotazione_mygov_ente_prenotazione_id_seq'), 0, mygov_ente_id_n, 
					      (SELECT mygov_anagrafica_stato_id 
						 FROM mygov_anagrafica_stato
						WHERE cod_stato = 'INSERITO'
						  AND de_tipo_stato = 'FLUSSO_EXPORT')
					    , '2014-01-01', 'ALL', 
					    current_timestamp, current_timestamp);
		ELSEIF current_timestamp > (max_date_to + interval '1 hour') THEN
			INSERT INTO mygov_ente_prenotazione(
					    mygov_ente_prenotazione_id, "version", mygov_ente_id, mygov_anagrafica_stato_id, 
					    dt_prenota_date_from, cod_prenota_identificativo_tipo_dovuto,  
					    dt_creazione, dt_ultima_modifica)
				    VALUES (nextval('mygov_ente_prenotazione_mygov_ente_prenotazione_id_seq'), 0, mygov_ente_id_n, 
					      (SELECT mygov_anagrafica_stato_id 
						 FROM mygov_anagrafica_stato
						WHERE cod_stato = 'INSERITO'
						  AND de_tipo_stato = 'FLUSSO_EXPORT')
					    , max_date_to, 'ALL', 
					    current_timestamp, current_timestamp);
		END IF;
	END IF;     

    END;
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;

-- 5.1.6.2
CREATE INDEX fki_mygov_prenotazione_flusso_rendic_mygov_anagrafica_stato_id
ON mygov_prenotazione_flusso_rendicontazione
USING btree
(mygov_anagrafica_stato_id);

CREATE INDEX fki_mygov_prenotazione_flusso_rendicontazione_mygov_entepsp_id
ON mygov_prenotazione_flusso_rendicontazione
USING btree
(mygov_entepsp_id);