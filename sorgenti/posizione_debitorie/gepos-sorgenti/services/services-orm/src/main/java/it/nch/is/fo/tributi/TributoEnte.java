package it.nch.is.fo.tributi;

import it.nch.fwk.fo.common.CommonBusinessObject;
import it.nch.fwk.fo.dto.DTO;
import it.nch.fwk.fo.dto.business.PojoImpl;
import it.nch.is.fo.profilo.Enti;
import it.nch.is.fo.profilo.EntiCommon;
import it.nch.is.fo.sistemienti.ISistemaEnte;
import it.nch.is.fo.sistemienti.SistemaEnte;
import it.tasgroup.iris.domain.CfgNotificaPagamento;
import it.tasgroup.services.util.enumeration.EnumTipoCfgNotifica;

import java.util.Comparator;
import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.springframework.beans.factory.BeanFactory;
import org.springframework.beans.factory.access.BeanFactoryLocator;
import org.springframework.beans.factory.access.BeanFactoryReference;
import org.springframework.beans.factory.access.SingletonBeanFactoryLocator;


/**
 * Jltentr generated by hbm2java
 */
@Entity
@Table(name="JLTENTR")
@NamedQueries( 
{
	@NamedQuery(
			name="tributiEntiByIBAN",
			query="from TributoEnte e " +
					"where e.IBANContoTecnico=:iban"),
	@NamedQuery(name="allTributiEnti",query="from TributoEnte e order by e.deTrb"),

	@NamedQuery(name="allTributiEntiByCdTrb",query="from TributoEnte e where e.cdTrbEnte IN (:cdTrbEnte) order by e.deTrb"),
	
	@NamedQuery(name="tributiEntiByIdSysIdEnte",query="from TributoEnte a where a.sistemaEnteobj.sisEntId.idSystem = :sistema and a.idEnte = :ente"),
	
	@NamedQuery(name="tributiEntiIbanCCpNull",query="select a from TributoEnte a where a.IBAN_CCP is null or a.IBAN_CCP = '' "),
	
	@NamedQuery(name="allTributiEntiByEnte",query="select a from TributoEnte a where a.idEnte = :ente  order by a.deTrb "),
	
	@NamedQuery(name="allTributiEntiByEnteAndNdpCdStaz",query="select distinct(a.urlUpdService) from TributoEnte a where a.idEnte = :ente and a.ndpCodStazPa= :ndpCodStazPa"),
	
	@NamedQuery(name="getAllTributiEnteEseguiti",query="select a from TributoEnte a where a.idEnte = :ente and a.cdTrbEnte IN (select p.cdTrbEnte from Pagamenti p where p.stPagamento = 'ES' and p.idEnte =:ente) order by a.deTrb "),
	
	@NamedQuery(name="allTributiEntiByEnteAndCdTrb",query="select a from TributoEnte a where a.idEnte = :ente  and a.cdTrbEnte IN (:cdTrbEnte) order by a.deTrb "),

	@NamedQuery(name="checkTributoEnteIbanCCpNull",query="select Count(a.cdTrbEnte) from TributoEnte a  where  a.idEnte =:ente  and a.cdTrbEnte =:cdTrbEnte and ( a.IBAN_CCP is null or a.IBAN_CCP = '' ) "),	
	
	@NamedQuery(name="checkTributoEntebyIban",query="select Count(a.cdTrbEnte) from TributoEnte a  where  a.idEnte =:ente  and (a.IBAN =:iban  or a.IBAN_CCP=:iban1  or a.IBAN_MYBANK=:iban2 or a.IBANContoTecnico=:iban3)"),
	
	@NamedQuery(name="checkTributoEnteIbanMyBankNull",query="select Count(a.cdTrbEnte) from TributoEnte a  where  a.idEnte =:ente  and a.cdTrbEnte =:cdTrbEnte and ( a.IBAN_MYBANK is null or a.IBAN_MYBANK = '' ) ")	
}
)
public class TributoEnte extends PojoImpl implements ITributoEnte {
 
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	/*** PK Reference ***/
	private JltentrId tribEnId;
	
	/*** Persistent Properties ***/
	private String idTributo;
	private String deTrb;
	private String flIniziativa;
	private String tipoGestioneRichiestaRevoca = "KO";
	private String flPredeterm;
	private String flRicevutaAnonimo;
	private String flNotificaPagamento;
	private String flVerificaPagamento;
	private String soggEsclusi;
	private String stato;
	private int prVersione;
	private String opInserimento;
	private Date tsInserimento;
	private String opAggiornamento;
	private Date tsAggiornamento;
	
	private String SIL;
	private String IBAN;
	private String IBANContoTecnico;
	private String IBAN_CCP;
	private String IBAN_MYBANK;
	private String desCategoriaTributo;
	private String infoTributo;
	private String urlInfoService;
	private String flNascostoFe;
	private String urlUpdService;
	private String istruzioniPagamento;
	
	private String ndpCodStazPa; 
	private String ndpAuxDigit;  
	private String flNdpIuvGenerato; 
	private	Long   ndpIuvStartNum; 
	private String ndpCodSegr;
	private String iuvGenSeqType = "T";
	private String autorizzStampaBP;
	private String intestazioneCCP;
	private String uoaCompetente; 
 
	private String cfgTsrCodiceEnte;
	private String cfgTsrContoEnte;
	
	/*** Persistent References ***/
	private Enti entiobj;
	private CategoriaTributo categoriaobj;
	private SistemaEnte sistemaEnteobj;
	
	private List<CfgNotificaPagamento> cfgNotificaPagamentos;
	private Set<TributiOperatore> tributiOperatore;
	
	private Long numPendenze;
	
	private CfgTributoEntePlugin cfgTributoEntePlugin;

	
	private String flNdp;
	private String flNdpModello3;
	private String flBancaTesoriera;
	private String flBlf;

    private transient BeanFactoryLocator bfl;
    private transient BeanFactoryReference bfr;
    private transient BeanFactory bf;

    public TributoEnte(){
    	this.tribEnId = new JltentrId();
    }
    
    public TributoEnte(JltentrId id){
    	this.tribEnId = id;
    }

	public TributoEnte(String idEnte, String cdTrbEnte, int prVersione, String opInserimento, Date tsInserimento) {
		this.tribEnId.setCdTrbEntePk(cdTrbEnte);
		this.tribEnId.setIdEntePk(idEnte);
		this.prVersione = prVersione;
		this.opInserimento = opInserimento;
		this.tsInserimento = tsInserimento;
	}

	public TributoEnte(String idEnte, String cdTrbEnte, String idTributo, String deTrb, String flIniziativa, String tipoGestioneRichiestaRevoca, String soggEsclusi,
			String stato, int prVersione, String opInserimento, Date tsInserimento, String opAggiornamento,
			Date tsAggiornamento) {
		this.tribEnId.setCdTrbEntePk(cdTrbEnte);
		this.tribEnId.setIdEntePk(idEnte);
		this.idTributo = idTributo;
		this.deTrb = deTrb;
		this.flIniziativa = flIniziativa;
		this.tipoGestioneRichiestaRevoca = tipoGestioneRichiestaRevoca;
		this.soggEsclusi = soggEsclusi;
		this.stato = stato;
		this.prVersione = prVersione;
		this.opInserimento = opInserimento;
		this.tsInserimento = tsInserimento;
		this.opAggiornamento = opAggiornamento;
		this.tsAggiornamento = tsAggiornamento;
	}
    
    @Id
	public JltentrId getTribEnId() {
		return tribEnId;
	}
	public void setTribEnId(JltentrId tribEnId) {
		this.tribEnId = tribEnId;
	}    

	@Column(name="IBAN")
	public String getIBAN() {
		return IBAN;
	}
	public void setIBAN(String iban) {
		IBAN = iban;
	}
	
	@Column(name="IBAN_CCP")
	public String getIBAN_CCP() {
		return IBAN_CCP;
	}
	public void setIBAN_CCP(String iban) {
		IBAN_CCP = iban;
	}

	@Column(name="ID_TRIBUTO")
	public String getIdTributo() {
		return this.idTributo;
	}
	public void setIdTributo(String idTributo) {
		this.idTributo = idTributo;
	}

	@Column(name="DE_TRB")
	public String getDeTrb() {
		return this.deTrb;
	}
	public void setDeTrb(String deTrb) {
		this.deTrb = deTrb;
	}

	@Column(name="FL_INIZIATIVA")
	public String getFlIniziativa() {
		return this.flIniziativa;
	}
	public void setFlIniziativa(String flIniziativa) {
		this.flIniziativa = flIniziativa;
	}
	
	@Column(name="TIPO_GESTIONE_RICH_REVOCA")
	public String getTipoGestioneRichiestaRevoca() {
		return this.tipoGestioneRichiestaRevoca;
	}
	public void setTipoGestioneRichiestaRevoca(String tipoGestioneRichiestaRevoca) {
		this.tipoGestioneRichiestaRevoca = tipoGestioneRichiestaRevoca;
	}

	@Column(name="SOGG_ESCLUSI")
	public String getSoggEsclusi() {
		return this.soggEsclusi;
	}
	public void setSoggEsclusi(String soggEsclusi) {
		this.soggEsclusi = soggEsclusi;
	}

	@Column(name="STATO")
	public String getStato() {
		return this.stato;
	}
	public void setStato(String stato) {
		this.stato = stato;
	}

	@Column(name="PR_VERSIONE")
	public int getPrVersione() {
		return this.prVersione;
	}
	public void setPrVersione(int prVersione) {
		this.prVersione = prVersione;
	}

	@Column(name="OP_INSERIMENTO")
	public String getOpInserimento() {
		return this.opInserimento;
	}
	public void setOpInserimento(String opInserimento) {
		this.opInserimento = opInserimento;
	}

	@Column(name="TS_INSERIMENTO")
	public Date getTsInserimento() {
		return this.tsInserimento;
	}
	public void setTsInserimento(Date tsInserimento) {
		this.tsInserimento = tsInserimento;
	}

	@Column(name="OP_AGGIORNAMENTO")
	public String getOpAggiornamento() {
		return this.opAggiornamento;
	}
	public void setOpAggiornamento(String opAggiornamento) {
		this.opAggiornamento = opAggiornamento;
	}

	@Column(name="TS_AGGIORNAMENTO")
	public Date getTsAggiornamento() {
		return this.tsAggiornamento;
	}
	public void setTsAggiornamento(Date tsAggiornamento) {
		this.tsAggiornamento = tsAggiornamento;
	}

	@Column(name="ID_ENTE",insertable=false,updatable=false)
	public String getIdEnte() {
		return this.tribEnId.getIdEntePk();
	}
	public void setIdEnte(String idEnte) {
		this.tribEnId.setIdEntePk(idEnte);
	}

	@Column(name="CD_TRB_ENTE",insertable=false,updatable=false)
	public String getCdTrbEnte() {
		return tribEnId.getCdTrbEntePk();
	}
	public void setCdTrbEnte(String cdTrbEnte) {
		this.tribEnId.setCdTrbEntePk(cdTrbEnte);
	}

	@Column(name="ID_SYSTEM")
	public String getSIL() {
		return SIL;
	}
	public void setSIL(String sil) {
		SIL = sil;
	}

	@Column(name="FL_PREDETERM")
	public String getFlPredeterm() {
		return flPredeterm;
	}
	
	public void setFlPredeterm(String flPredeterm) {
		this.flPredeterm = flPredeterm;
	}
	
	@Column(name="FL_RICEVUTA_ANONIMO")
	public String getFlRicevutaAnonimo() {
		return flRicevutaAnonimo;
	}
	
	public void setFlRicevutaAnonimo(String flRicevutaAnonimo) {
		this.flRicevutaAnonimo = flRicevutaAnonimo;
	}

	@Column(name="FL_ADD_RT_VERIFICA_PAG")
	public String getFlVerificaPagamento() {
		return flVerificaPagamento;
	}

	public void setFlVerificaPagamento(String flVerificaPagamento) {
		this.flVerificaPagamento = flVerificaPagamento;
	}

	@Column(name="FL_NOTIFICA_PAGAMENTO")
	public String getFlNotificaPagamento() {
		return flNotificaPagamento;
	}

	public void setFlNotificaPagamento(String flNotificaPagamento) {
		this.flNotificaPagamento = flNotificaPagamento;
	}

	@Column(name="URL_INFO_SERVICE")
	public String getUrlInfoService() {
		return urlInfoService;
	}

	public void setUrlInfoService(String urlInfoService) {
		this.urlInfoService = urlInfoService;
	}
	@Column(name="NDP_IUV_START_NUM")
	public Long getNdpIuvStartNum() {
		return ndpIuvStartNum;
	}

	public void setNdpIuvStartNum(Long ndpIuvStartNum) {
		this.ndpIuvStartNum = ndpIuvStartNum;
	}
	@Column(name="NDP_COD_STAZ_PA")
	public String getNdpCodStazPa() {
		return ndpCodStazPa;
	}

	public void setNdpCodStazPa(String ndpCodStazPa) {
		this.ndpCodStazPa = ndpCodStazPa;
	}
	@Column(name="NDP_AUX_DIGIT")
	public String getNdpAuxDigit() {
		return ndpAuxDigit;
	}

	public void setNdpAuxDigit(String ndpAuxDigit) {
		this.ndpAuxDigit = ndpAuxDigit;
	}
	
	@Column(name="FL_NDP_IUV_GENERATO")
	public String getFlNdpIuvGenerato() {
		return flNdpIuvGenerato;
	}

	public void setFlNdpIuvGenerato(String flNdpIuvGenerato) {
		this.flNdpIuvGenerato = flNdpIuvGenerato;
	}

	@ManyToOne(targetEntity=it.nch.is.fo.profilo.Enti.class)
	@JoinColumn(name="ID_ENTE", insertable=false, updatable=false)
	public Enti getEntiobj() {
		return entiobj;
	}
	public void setEntiobj(EntiCommon entiobj) {
		this.entiobj = (Enti)entiobj;
	}

	@ManyToOne(targetEntity=CategoriaTributo.class)
	@JoinColumn(name="ID_TRIBUTO", insertable=false, updatable=false)
	public ICategoriaTributo getCategoriaobj() {
		return categoriaobj;
	}
	public void setCategoriaobj(ICategoriaTributo categoriaobj) {
		this.categoriaobj = (CategoriaTributo)categoriaobj;
	}
		
	@ManyToOne(targetEntity=SistemaEnte.class)
    @JoinColumns({
        @JoinColumn(name="ID_ENTE", insertable=false,updatable=false),
        @JoinColumn(name="ID_SYSTEM", insertable=false,updatable=false)
    })
	
	public SistemaEnte getSistemaEnteobj() {
		return sistemaEnteobj;
	}
	public void setSistemaEnteobj(ISistemaEnte sistemaEnteobj) {
		this.sistemaEnteobj = (SistemaEnte)sistemaEnteobj;
	}

	@Override
	@Transient
    public String getDesCategoriaTributo() {
		return desCategoriaTributo;
	}
	public void setDesCategoriaTributo(String desCategoriaTributo) {
		this.desCategoriaTributo = desCategoriaTributo;
	}
	
	@Override
	@Transient
	public CommonBusinessObject copy() {

		bfl = SingletonBeanFactoryLocator.getInstance("server-beanRefFactory.xml");
        bfr = bfl.useBeanFactory("it.nch.orm");
        bf=bfr.getFactory();
        ITributoEnteForm _form =(ITributoEnteForm) bf.getBean("TributoEnteForm");

         _form.setNativePojo(this);

        ITributoEnte _pojo = this;
		_pojo = (ITributoEnte) bf.getBean("TributoEnte");


		_form.setCdTrbEnte(_pojo.getCdTrbEnte());
		_form.setDeTrb(_pojo.getDeTrb());
		_form.setFlIniziativa(_pojo.getFlIniziativa());
		_form.setSIL(_pojo.getSIL());
		_form.setFlPredeterm(_pojo.getFlPredeterm());
		_form.setFlNotificaPagamento(_pojo.getFlNotificaPagamento());
		_form.setFlVerificaPagamento(_pojo.getFlVerificaPagamento());
		_form.setIBAN(_pojo.getIBAN());
		_form.setIdEnte(_pojo.getIdEnte());
		_form.setIdTributo(_pojo.getIdTributo());
		_form.setSoggEsclusi(_pojo.getSoggEsclusi());
		_form.setStato(_pojo.getStato());
		_form.setInfoTributo(_pojo.getInfoTributo());
		_form.setNdpCodStazPa(_pojo.getNdpCodStazPa()); 
		_form.setNdpAuxDigit(_pojo.getNdpAuxDigit());  
		_form.setFlNdpIuvGenerato(_pojo.getFlNdpIuvGenerato()); 
		//_form.setNdpIuvStartNum(formatNdpIuvStart(((TributoEnte)_pojo).getNdpIuvStartNum()));
		
		 _form.setFlBancaTesoriera(_pojo.getFlBancaTesoriera());
         _form.setFlBlf(_pojo.getFlBlf());
         _form.setFlNdp(_pojo.getFlNdp());
         _form.setFlNdpModello3(_pojo.getFlNdpModello3());
         _form.setUoaCompetente(_pojo.getUoaCompetente());
         _form.setIntestazioneCCP(_pojo.getIntestazioneCCP());
         _form.setAutorizzStampaBP(_pojo.getAutorizzStampaBP());
         
         _pojo.setTipoGestioneRichiestaRevoca(_form.getTipoGestioneRichiestaRevoca());
		return _form;
	}
	private String formatNdpIuvStart(Long l) {
		String trailingZeroes=String.format("%1$" + 11 + "s", l).replace(' ', '0');
		while (trailingZeroes!=null && trailingZeroes.endsWith("0")){
			trailingZeroes=trailingZeroes.substring(0, trailingZeroes.length()-1);
			
		}
		return trailingZeroes;
	}
	@Override
	@Transient
	public DTO incapsulateBO() {
		return null;
	}

	@Override
	@Transient
	public void show() {
		
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((tribEnId == null) ? 0 : tribEnId.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		TributoEnte other = (TributoEnte) obj;
		if (tribEnId == null) {
			if (other.tribEnId != null)
				return false;
		} else if (!tribEnId.equals(other.tribEnId))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "TributoEnte [tribEnId=" + tribEnId + ", idTributo=" + idTributo
				+ ", deTrb=" + deTrb + ", flIniziativa=" + flIniziativa
				+ ", flPredeterm=" + flPredeterm + ", flNotificaPagamento=" + flNotificaPagamento
				+ ", soggEsclusi=" + soggEsclusi + ", stato=" + stato + ", prVersione="
				+ prVersione + ", opInserimento=" + opInserimento
				+ ", tsInserimento=" + tsInserimento + ", opAggiornamento="
				+ opAggiornamento + ", tsAggiornamento=" + tsAggiornamento
				+ ", SIL=" + SIL + ", IBAN=" + IBAN + ", desCategoriaTributo="
				+ ", UOACompetente=" + uoaCompetente + ", IntestazioneCCP=" + intestazioneCCP 
				+ desCategoriaTributo + ", entiobj=" + entiobj
				+", infoTributo=" + infoTributo +"]";
	}

	@Column(name="INFO_TRIBUTO")
	public String getInfoTributo() {
		return infoTributo;
	}

	public void setInfoTributo(String infoTributo) {
		this.infoTributo = infoTributo;
	}

	@Column(name="FL_NASCOSTO_FE")
	public String getFlNascostoFe() {
		return flNascostoFe;
	}

	public void setFlNascostoFe(String flNascostoFe) {
		this.flNascostoFe = flNascostoFe;
	}

	@Column(name="URL_UPD_SERVICE")
	public String getUrlUpdService() {
		return urlUpdService;
	}

	public void setUrlUpdService(String urlUpdService) {
		this.urlUpdService = urlUpdService;
	}

	@Column(name="ISTRUZIONI_PAGAMENTO")
	public String getIstruzioniPagamento() {
		return istruzioniPagamento;
	}

	public void setIstruzioniPagamento(String istruzioniPagamento) {
		this.istruzioniPagamento = istruzioniPagamento;
	}

	@Column(name="IBAN_CONTO_TECNICO")
	public String getIBANContoTecnico() {
		return IBANContoTecnico;
	}

	public void setIBANContoTecnico(String iBANContoTecnico) {
		IBANContoTecnico = iBANContoTecnico;
	}
	
	//bi-directional many-to-one association to CfgNotificaPagamento
	@OneToMany(mappedBy="tributoEnte", cascade={CascadeType.ALL}, orphanRemoval=true)
	public List<CfgNotificaPagamento> getCfgNotificaPagamentos() {
		return this.cfgNotificaPagamentos;
	}

	public void setCfgNotificaPagamentos(List<CfgNotificaPagamento> cfgNotificaPagamentos) {
		this.cfgNotificaPagamentos = cfgNotificaPagamentos;
	}

	@OneToMany(targetEntity=TributiOperatore.class,mappedBy="tributoente")
	public Set<TributiOperatore> getTributiOperatore() {
		return this.tributiOperatore;
 	} 

    	public void setTributiOperatore(Set tributiOperatore){
 		this.tributiOperatore= tributiOperatore;
    	} 

    	
	@OneToOne(fetch = FetchType.LAZY, cascade = {CascadeType.ALL}, orphanRemoval = true)
	@JoinColumns({ 
		@JoinColumn(name = "ID_ENTE",     insertable = true, updatable = false),
		@JoinColumn(name = "CD_TRB_ENTE", insertable = true, updatable = false) 
	})
	public CfgTributoEntePlugin getCfgTributoEntePlugin() {
		return cfgTributoEntePlugin;
	}

	public void setCfgTributoEntePlugin(CfgTributoEntePlugin cfgTributoEntePlugin) {
		this.cfgTributoEntePlugin = cfgTributoEntePlugin;
	}    	
    	
    	
	@Transient
	public CfgNotificaPagamento getCfgNotificaEseguito(){
		
		if (cfgNotificaPagamentos!= null)
			
			for(CfgNotificaPagamento cfg : cfgNotificaPagamentos){
				
				if(EnumTipoCfgNotifica.ESEGUITO.getChiave().equals(cfg.getTipoNotifica()))
						
						return cfg;
			}
		
		return null;
	}
	
	@Transient
	public CfgNotificaPagamento getCfgNotificaIncassato(){
		
		if (cfgNotificaPagamentos!= null)
			
			for(CfgNotificaPagamento cfg : cfgNotificaPagamentos){
				
				if(EnumTipoCfgNotifica.INCASSO.getChiave().equals(cfg.getTipoNotifica()))
						
						return cfg;
			}
		
		return null;
	}
	
	@Transient
	public CfgNotificaPagamento getCfgNotificaRegolato(){
		
		if (cfgNotificaPagamentos!= null)
			
			for(CfgNotificaPagamento cfg : cfgNotificaPagamentos){
				
				if(EnumTipoCfgNotifica.REGOLATO.getChiave().equals(cfg.getTipoNotifica()))
						
						return cfg;
			}
		
		return null;
	}

	@Transient
	public Long getNumPendenze() {
		return numPendenze;
	}

	@Transient
	public void setNumPendenze(Long numPendenze) {
		this.numPendenze = numPendenze;
	}
    
	@Column(name="IBAN_MYBANK")
	public String getIBAN_MYBANK() {
		return IBAN_MYBANK;
	}

	public void setIBAN_MYBANK(String iBAN_MYBANK) {
		IBAN_MYBANK = iBAN_MYBANK;
	}

	@Column(name="FL_NDP")
	public String getFlNdp() {
		return flNdp;
	}

	public void setFlNdp(String flNdp) {
		this.flNdp = flNdp;
	}

	@Column(name="FL_NDP_MODELLO3")
	public String getFlNdpModello3() {
		return flNdpModello3;
	}

	public void setFlNdpModello3(String flNdpModello3) {
		this.flNdpModello3 = flNdpModello3;
	}

	@Column(name="FL_BANCA_TESORIERA")
	public String getFlBancaTesoriera() {
		return flBancaTesoriera;
	}

	public void setFlBancaTesoriera(String flBancaTesoriera) {
		this.flBancaTesoriera = flBancaTesoriera;
	}

	@Column(name="FL_BFL")
	public String getFlBlf() {
		return flBlf;
	}

	public void setFlBlf(String flBlf) {
		this.flBlf = flBlf;
	}
	
	@Column(name = "AUTORIZZ_STAMPA_BP")
	public String getAutorizzStampaBP() {
		return autorizzStampaBP;
	}

	public void setAutorizzStampaBP(String autorizzStampaBP) {
		this.autorizzStampaBP = autorizzStampaBP;
	}

	@Column(name="INTESTAZIONE_CCP") 
	  public String getIntestazioneCCP() { 
	 	return intestazioneCCP; 
	} 
	public void setIntestazioneCCP(String intestazioneCCP) { 
	 	this.intestazioneCCP = intestazioneCCP; 
	} 
	
	@Column(name="UOA_COMPETENTE") 
	public String getUoaCompetente() { 
	 	return uoaCompetente; 
	} 
	public void setUoaCompetente(String uoaCompetente) { 
	 	this.uoaCompetente = uoaCompetente; 
	} 

	@Column(name="NDP_COD_SEGR")
	public String getNdpCodSegr() {
		return ndpCodSegr;
	}

	public void setNdpCodSegr(String ndpCodSegr) {
		this.ndpCodSegr = ndpCodSegr;
	}
	
	@Column(name="CFG_TSR_CODICE_ENTE")
	public String getCfgTsrCodiceEnte() {
		return cfgTsrCodiceEnte;
	}
	public void setCfgTsrCodiceEnte(String cfgTsrCodiceEnte) {
		this.cfgTsrCodiceEnte = cfgTsrCodiceEnte;
	}
	
	@Column(name="CFG_TSR_CONTO_ENTE")
	public String getCfgTsrContoEnte() {
		return cfgTsrContoEnte;
	}
	public void setCfgTsrContoEnte(String cfgTsrContoEnte) {
		this.cfgTsrContoEnte = cfgTsrContoEnte;
	}
	
	@Column(name="IUV_GEN_SEQ_TYPE")
	public String getIuvGenSeqType() {
		//TODO per ora resta a T, la gestione del valore E richiede sanatorie preventive
		return "T";
	}
	
	public void setIuvGenSeqType(String iuvGenSeqType) {
		//TODO per ora resta a T, la gestione del valore E richiede sanatorie preventive
		//this.iuvGenSeqType = iuvGenSeqType;
	}


}
