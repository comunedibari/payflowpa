package it.tasgroup.idp.cart.orm.monitoraggio;

import java.io.Serializable;
import java.sql.Timestamp;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import it.tasgroup.idp.cart.orm.monitoraggio.enums.EnumTipoGestione;


/**
 * The persistent class for the GESTIONI database table.
 * 
 */
@Entity
@Table(name="ssil_gestioni")
//@NamedQueries({
//    @NamedQuery(name = "getErroriPiuFrequenti",
//    		query = "select g.codErrore, g.descrErrore, g.componenteResponsabile, count(g) from Gestioni join g.messaggi m where g.codErrore IS NOT NULL and g.descrErrore IS NOT NULL and m.soggetto = :soggetto and m.sil :sil and m.tipoMessaggio :tipoMessaggio and g.dataInizioGestione >= :dataInizio and g.dataInizioGestione <= :dataFine group by g.codErrore, g.descrErrore, g.componenteResponsabile order by count(g) desc"),
//    @NamedQuery(name = "countGestioniOk", query = "select count(*) from Gestioni join g.messaggi m where g.codErrore IS NULL and g.descrErrore IS NULL and m.soggetto = :soggetto and m.sil :sil and m.tipoMessaggio :tipoMessaggio and g.dataInizioGestione >= :dataInizio and g.dataInizioGestione <= :dataFine"),
//    @NamedQuery(name = "countGestioniErrore", query = "select count(*) from Gestioni join g.messaggi m where g.codErrore IS NOT NULL and g.descrErrore IS NOT NULL and m.soggetto = :soggetto and m.sil :sil and m.tipoMessaggio :tipoMessaggio and g.dataInizioGestione >= :dataInizio and g.dataInizioGestione <= :dataFine"),
//    @NamedQuery(name = "avgRichiesta", query = "select avg(g.tempoGestione) from Gestioni join g.messaggi m where g.tipoGestione :tipoGestione and m.soggetto = :soggetto and m.sil :sil and m.tipoMessaggio :tipoMessaggio and g.dataInizioGestione >= :dataInizio and g.dataInizioGestione <= :dataFine"),
//    @NamedQuery(name = "avgEsiti", query = "select avg(g.tempoGestione) from Gestioni join g.messaggi m where g.tipoGestione :tipoGestione and m.soggetto = :soggetto and m.sil :sil and m.tipoMessaggio :tipoMessaggio and g.dataInizioGestione >= :dataInizio and g.dataInizioGestione <= :dataFine"),
//    @NamedQuery(name = "inattivitaAP", query = "select count(*) from Gestioni join g.messaggi m where g.codErrore IS NULL and g.descrErrore IS NULL and g.tipoGestione :tipoGestione and m.soggetto = :soggetto and m.sil :sil and m.tipoMessaggio :tipoMessaggio and g.dataInizioGestione >= :dataInizio and g.dataInizioGestione <= :dataFine"),
//    @NamedQuery(name = "inattivitaAPE", query = "select g from Gestioni join g.messaggi m where g.tipoGestione :tipoGestione and m.soggetto = :soggetto and m.sil :sil and m.tipoMessaggio :tipoMessaggio order by g.dataInizioGestione desc"),
//    @NamedQuery(name = "inattivitaIP", query = "select g from Gestioni join g.messaggi m where g.tipoGestione :tipoGestione and m.soggetto = :soggetto and m.sil :sil and m.tipoMessaggio :tipoMessaggio order by g.dataInizioGestione desc"),
//    @NamedQuery(name = "getUltimaGestione", query = "select g from Gestioni join g.messaggi m where g.tipoGestione :tipoGestione and m.soggetto = :soggetto and m.sil :sil and m.tipoMessaggio :tipoMessaggio and m.msgId : msgId order by g.dataInizioGestione desc")
//})
public class Gestioni extends it.tasgroup.idp.domain.BaseIdEntity implements Serializable{

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	
	/***
	 * 
	 ID INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY (NO CACHE),
    ID_MESSAGGIO BIGINT NOT NULL,
	DATA_INIZIO_GESTIONE TIMESTAMP NOT NULL,
	TIPO VARCHAR(255) NOT NULL,
	TEMPO_GESTIONE BIGINT,
	ID_EGOV VARCHAR(255),
	COD_ERRORE VARCHAR(255),
	DESCR_ERRORE VARCHAR(255),
	COMPONENTE_RESPONSABILE VARCHAR(255),

	OP_INSERIMENTO VARGRAPHIC(40) NOT NULL,
	TS_INSERIMENTO TIMESTAMP NOT NULL,
	OP_AGGIORNAMENTO VARGRAPHIC(40),
	TS_AGGIORNAMENTO TIMESTAMP,
	VERSION INTEGER NOT NULL DEFAULT 0
	HTTP_RESPONSE_CODE INTEGER
	 HTTP_HEADERS VARCHAR(2048)
	 * 
	 */
	
	private Messaggi messaggi;
	
	private EnumTipoGestione tipoGestione;
	
	private Timestamp dataInizioGestione;
	private Long tempoGestione;
	
	private String idEgov;
	private String codErrore;
	private String descErrore;
	private String componenteResponsabile;
	private Integer httpResponseCode;
	private String httpHeaders;
	

	
    /*** Id Mapping ***/
    /*** AUTO, works on DB2 with Identity ***/
    /*** AUTO + seqGenerator, works on Oracle with Sequences ***/
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id")
    public Long getId() {
            return super.id;
    }

    @ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
    @JoinColumn(name="id_messaggio", nullable= false)
	public Messaggi getMessaggi() {
		return messaggi;
	}


	public void setMessaggi(Messaggi messaggi) {
		this.messaggi = messaggi;
	}

	@Column(name="tipo", nullable = false)
	@Enumerated(EnumType.STRING)
	public EnumTipoGestione getTipoGestione() {
		return tipoGestione;
	}


	public void setTipoGestione(EnumTipoGestione tipoGestione) {
		this.tipoGestione = tipoGestione;
	}

	@Column(name="data_inizio_gestione", nullable = false)
	public Timestamp getDataInizioGestione() {
		return dataInizioGestione;
	}


	public void setDataInizioGestione(Timestamp dataInizioGestione) {
		this.dataInizioGestione = dataInizioGestione;
	}

	@Column(name="tempo_gestione", nullable = true)
	public Long getTempoGestione() {
		return tempoGestione;
	}


	public void setTempoGestione(Long tempoGestione) {
		this.tempoGestione = tempoGestione;
	}

	@Column(name="id_egov", nullable = true)
	public String getIdEgov() {
		return idEgov;
	}


	public void setIdEgov(String idEgov) {
		this.idEgov = idEgov;
	}

	@Column(name="cod_errore", nullable = true)
	public String getCodErrore() {
		return codErrore;
	}


	public void setCodErrore(String codErrore) {
		this.codErrore = codErrore;
	}

	@Column(name="descr_errore", nullable = true)
	public String getDescrErrore() {
		return descErrore;
	}


	public void setDescrErrore(String descErrore) {
		this.descErrore = descErrore;
	}

	@Column(name="componente_responsabile", nullable = true)
	public String getComponenteResponsabile() {
		return componenteResponsabile;
	}


	public void setComponenteResponsabile(String componenteResponsabile) {
		this.componenteResponsabile = componenteResponsabile;
	}

	@Column(name="http_response_code", nullable = true)
	public Integer getHttpResponseCode() {
		return httpResponseCode;
	}

	public void setHttpResponseCode(Integer httpResponseCode) {
		this.httpResponseCode = httpResponseCode;
	}

	@Column(name="http_headers", nullable = true)
	public String getHttpHeaders() {
		return httpHeaders;
	}

	public void setHttpHeaders(String httpHeaders) {
		this.httpHeaders = httpHeaders;
	}


}
